<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ALV on Small Fire`s Blog</title>
    <link>https://coldinfire.github.io/tags/ALV/</link>
    <description>Recent content in ALV on Small Fire`s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 12 Jul 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://coldinfire.github.io/tags/ALV/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title> 选择屏幕添加 Layout 选择 </title>
      <link>https://coldinfire.github.io/2021/ABAP_ALV_Screen_Layout/</link>
      <pubDate>Mon, 12 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2021/ABAP_ALV_Screen_Layout/</guid>
      <description>屏幕选择 Layout &amp;#34; 选择屏幕参数 &amp;#34; PARAMETERS: p_disva TYPE slis_vari MEMORY ID zvari. &amp;#34; 屏幕事件定义 &amp;#34; AT SELECTION-SCREEN ON VALUE-REQUEST FOR p_disva. PERFORM variant_search CHANGING p_disva. &amp;#34; Search Help &amp;#34; Function 方法 FORM variant_search CHANGING cv_variant. DATA: zlv_f4_exit TYPE c, zls_variant TYPE disvariant. CLEAR:zls_variant. zls_variant-report = syst-repid. CALL FUNCTION &amp;#39;REUSE_ALV_VARIANT_F4&amp;#39; EXPORTING is_variant = zls_variant i_save = &amp;#39;A&amp;#39;</description>
    </item>
    
    <item>
      <title> OLE 下载数据到EXCEL模板及速度优化 </title>
      <link>https://coldinfire.github.io/2020/ABAP_EXCEL_OLE/</link>
      <pubDate>Fri, 20 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2020/ABAP_EXCEL_OLE/</guid>
      <description>OLE 下载 EXCEL 问题描述: 当项目中对导出数据EXCEL模板有要求时，ALV标准导出功能不能满足需要开发人员自定义下载数据程序。 步骤： 上传模板 tcod</description>
    </item>
    
    <item>
      <title> ALV 复制内容到剪贴板 </title>
      <link>https://coldinfire.github.io/2020/ABAP_ALV_ItabToClip/</link>
      <pubDate>Wed, 04 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2020/ABAP_ALV_ItabToClip/</guid>
      <description>引用链接：ALV复制内容到剪贴板 使用场景 用在 ALV 的 USER_COMMAND 里面；复制 ALV 内容到剪贴板，已经考虑了 ALV 的列隐藏、筛选，负号已经提前；如果有选中的列，则复制</description>
    </item>
    
    <item>
      <title> ALV 添加执行进度功能 </title>
      <link>https://coldinfire.github.io/2020/ABAP_ALV_Progress/</link>
      <pubDate>Sun, 01 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2020/ABAP_ALV_Progress/</guid>
      <description>添加进度条功能 为了更加清晰的了解到程序执行进度，可以在程序中添加显示进度条功能。 DATA:BEGIN OF gt_result OCCURS 0, sel(1), matnr TYPE mara-matnr, zz_edi_grp TYPE mara-zz_edi_grp, werks TYPE mseg-werks, eknam TYPE eknam, maktx TYPE maktx, num TYPE sy-tabix, row TYPE sy-tabix, icon TYPE icon-id,</description>
    </item>
    
    <item>
      <title> SQVI 创建一张简易的报表 </title>
      <link>https://coldinfire.github.io/2019/ABAP_ALV_SQVI/</link>
      <pubDate>Wed, 28 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2019/ABAP_ALV_SQVI/</guid>
      <description>SAP 提供的 SQVI 功能，用以快速自定义一个自己需要的报表 通过该方式创建的报表，只能在 SQVI 下查，谁的用户创建的就只能谁看，其他用户无法共享。 创建，并选择</description>
    </item>
    
    <item>
      <title> ALV Tree 使用 </title>
      <link>https://coldinfire.github.io/2019/ABAP_ALV_TreeDemo/</link>
      <pubDate>Wed, 19 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2019/ABAP_ALV_TreeDemo/</guid>
      <description>示例代码</description>
    </item>
    
    <item>
      <title> ALV Tree 系统标准程序 </title>
      <link>https://coldinfire.github.io/2019/ABAP_ALV_Tree/</link>
      <pubDate>Tue, 18 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2019/ABAP_ALV_Tree/</guid>
      <description>SAP 示例 Program Description BCALV_TREE_01 ALV 树控制：构建层次树 BCALV_TREE_02 ALV 树控制：事件处理 BCALV_TREE_03 ALV 树控制：使用自己的上下文菜单 BCALV_TREE_04 ALV 树控制：添加按钮到工具栏 BCALV_TREE_05 ALV 树控制：添加菜单到工具栏</description>
    </item>
    
    <item>
      <title> ABAP DOI 使用 </title>
      <link>https://coldinfire.github.io/2019/ABAP_EXCEL_DOI/</link>
      <pubDate>Fri, 22 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2019/ABAP_EXCEL_DOI/</guid>
      <description>概述 DOI（Desktop office Integration）采用 OO 的思想实现与 Office 的结合使用，通过 DOI 对文档进行操作和处理。SAP 标准DEMO： SAPR</description>
    </item>
    
    <item>
      <title> SAP Excel 操作实例(CLASS) </title>
      <link>https://coldinfire.github.io/2018/ABAP_EXCEL_CLASS/</link>
      <pubDate>Sun, 02 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2018/ABAP_EXCEL_CLASS/</guid>
      <description>SAP Excel 操作实现 (CLASS) *&amp;amp;---------------------------------------------------------------------* *&amp;amp; Report ZEXCEL_CLASS_DEMO *&amp;amp;---------------------------------------------------------------------* REPORT zexcel_class_demo. TABLES: sscrfields,rlgrap. TYPE-POOLS: slis. &amp;#34; TEXT-000 : Select file to upload &amp;#34; &amp;#34; TEXT-001 : Select file &amp;#34; SELECTION-SCREEN BEGIN OF BLOCK file_name WITH FRAME TITLE text-000. SELECTION-SCREEN BEGIN OF LINE. SELECTION-SCREEN COMMENT 1(31) text-001 FOR FIELD p_file. PARAMETERS: p_file LIKE rlgrap-filename . SELECTION-SCREEN END OF LINE. SELECTION-SCREEN END OF BLOCK file_name. SELECTION-SCREEN FUNCTION KEY 1.</description>
    </item>
    
    <item>
      <title> SAP Excel 操作实例(BAPI) </title>
      <link>https://coldinfire.github.io/2018/ABAP_EXCEL_BAPI/</link>
      <pubDate>Wed, 28 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2018/ABAP_EXCEL_BAPI/</guid>
      <description>SAP Excel 操作实现 (BAPI) *&amp;amp;---------------------------------------------------------------------* *&amp;amp; Report ZEXCEL_BAPI *&amp;amp;---------------------------------------------------------------------* REPORT zexcel_bapi. TABLES: sscrfields,rlgrap. TYPE-POOLS: slis. &amp;#34; TEXT-000 : Select file to upload &amp;#34; &amp;#34; TEXT-001 : Select file &amp;#34; SELECTION-SCREEN BEGIN OF BLOCK file_name WITH FRAME TITLE text-000. SELECTION-SCREEN BEGIN OF LINE. SELECTION-SCREEN COMMENT 1(31) text-001 FOR FIELD p_file. PARAMETERS: p_file LIKE rlgrap-filename . SELECTION-SCREEN END OF LINE. SELECTION-SCREEN END OF BLOCK file_name. SELECTION-SCREEN FUNCTION KEY 1.</description>
    </item>
    
    <item>
      <title> SAP Excel 文件操作 </title>
      <link>https://coldinfire.github.io/2018/ABAP_Excel_TemplateOperate/</link>
      <pubDate>Tue, 13 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2018/ABAP_Excel_TemplateOperate/</guid>
      <description>操作 EXCEL 文件方式 使用类操作文件 CL_GUI_FRONTEND_SERVICES：该类提供了大量对操作系统文件的操作，如拷贝、列出文件名、打开文</description>
    </item>
    
    <item>
      <title> SAP 上传和下载 Excel </title>
      <link>https://coldinfire.github.io/2018/ABAP_Excel_Template/</link>
      <pubDate>Sat, 10 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2018/ABAP_Excel_Template/</guid>
      <description>上传模板 EXCEL 文档是通过 SMW0 上传的。 选择模板类型 根据Package和Name查找模板 编辑模板 创建模板，维护名称和描述后从本地选择文件上传 下载模板 通</description>
    </item>
    
    <item>
      <title> 报表开发常用工具 </title>
      <link>https://coldinfire.github.io/2018/ABAP_ALV_Utils/</link>
      <pubDate>Tue, 21 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2018/ABAP_ALV_Utils/</guid>
      <description>单元格中的数据被修改后，将ALV单元格中的数据立即刷新到ABAP对应的内表中 方法一：通过对 REUSE_ALV_GRID_DISPLAY 函数参数 i_grid_settings-edt_cll_cb 进行设置 DATA:gs_grid_settings TYPE lv_s_glay. gs_grid_settings-edt_cll_cb = &amp;#39;X&amp;#39;. CALL FUNCTION &amp;#39;REUSE_ALV_GRID_DISPLAY&amp;#39; EXPORTING i_grid_settings = gs_grid_settings 方法</description>
    </item>
    
    <item>
      <title> ABAP 弹出框设置 </title>
      <link>https://coldinfire.github.io/2018/ABAP_Utils_PopUpBox/</link>
      <pubDate>Fri, 10 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2018/ABAP_Utils_PopUpBox/</guid>
      <description>可输入弹出框：POPUP_GET_VALUES_USER_HELP &amp;#34;输入表格，SVAL相应的字段信息决定显示的效果：&amp;#34; tabname = &amp;#39;AFKO&amp;#39;.</description>
    </item>
    
    <item>
      <title> ALV 单元格编辑设置 </title>
      <link>https://coldinfire.github.io/2018/ABAP_ALV_EditControl/</link>
      <pubDate>Fri, 03 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2018/ABAP_ALV_EditControl/</guid>
      <description>单元格级别的可编辑和不可编辑是个非常有用的功能，在很多时候都会使用到。 实现 ALV 单元格不可编辑 如果已经把 ALV 中的整列设为可编辑，而只想让这个列中的</description>
    </item>
    
    <item>
      <title> 动态显示 ALV </title>
      <link>https://coldinfire.github.io/2018/ABAP_ALV_DynamicDisplay/</link>
      <pubDate>Thu, 19 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2018/ABAP_ALV_DynamicDisplay/</guid>
      <description>Step1：创建动态的 Fieldcat 和普通创建 fieldcat 的方法相同，不过通过循环去创建动态的列。 Step2：创建动态的内表 根据上一步骤创建的 fieldcat 创建动态的内表，使</description>
    </item>
    
    <item>
      <title> ALV 屏幕其它功能设置 </title>
      <link>https://coldinfire.github.io/2018/ABAP_ALV_Screen_Util/</link>
      <pubDate>Thu, 28 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2018/ABAP_ALV_Screen_Util/</guid>
      <description>屏幕内创建按钮 SELECTION-SCREEN: PUSHBUTTON [/n] &amp;lt;pos(len)&amp;gt; &amp;lt;name&amp;gt; USER-COMMAND &amp;lt;ucom&amp;gt; [MODIF ID &amp;lt;key&amp;gt;]. /n :按钮初始时距离屏幕左边的位置 &amp;lt;pos(len)&amp;gt;：PUSHBUTTON按钮在屏幕生成的位置</description>
    </item>
    
    <item>
      <title> GRID LVC ALV Demo </title>
      <link>https://coldinfire.github.io/2018/ABAP_ALV_Demo_GridALV_LVC/</link>
      <pubDate>Wed, 27 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2018/ABAP_ALV_Demo_GridALV_LVC/</guid>
      <description>GRID LVC ALV 程序实例 *&amp;amp;-----------------------------------------------------------* *&amp;amp; Report ZGRID_ALV_LVC_DEMO *&amp;amp;-----------------------------------------------------------* REPORT zgrid_alv_lvc_demo. TYPE-POOLS: slis. TABLES: mara,marc,rlgrap. &amp;#34;Internal Table Data&amp;#34; TYPES: BEGIN OF str_alv, sel TYPE flag, id TYPE char25, &amp;#34; Red Green color &amp;#34; message TYPE string, &amp;#34; Message &amp;#34; index TYPE i, matnr TYPE mara-matnr, werks TYPE marc-werks, dismm TYPE marc-dismm, dispo TYPE marc-dispo, END OF str_alv. DATA: gt_alv TYPE STANDARD TABLE OF str_alv, gs_alv TYPE str_alv.</description>
    </item>
    
    <item>
      <title> GRID ALV Demo </title>
      <link>https://coldinfire.github.io/2018/ABAP_ALV_Demo_GridALV/</link>
      <pubDate>Tue, 26 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2018/ABAP_ALV_Demo_GridALV/</guid>
      <description>GRID ALV 程序实例 *&amp;amp;-----------------------------------------------------------* *&amp;amp; Report ZGRID_ALV_DEMO *&amp;amp;-----------------------------------------------------------* REPORT zgrid_alv_demo. TYPE-POOLS: slis. TABLES: mara,marc,rlgrap. &amp;#34;Internal Table Data&amp;#34; TYPES: BEGIN OF str_alv, sel TYPE flag, id TYPE char25, &amp;#34; Red Green color &amp;#34; message TYPE string, &amp;#34; Message &amp;#34; index TYPE i, matnr TYPE mara-matnr, werks TYPE marc-werks, dismm TYPE marc-dismm, dispo TYPE marc-dispo, END OF str_alv. DATA: gt_alv TYPE STANDARD TABLE OF str_alv, gs_alv TYPE str_alv. &amp;#34;ALV</description>
    </item>
    
    <item>
      <title> Field Catalog 字段排坑 </title>
      <link>https://coldinfire.github.io/2018/ABAP_ALV_Display_util/</link>
      <pubDate>Sun, 24 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2018/ABAP_ALV_Display_util/</guid>
      <description>原文链接：https://blog.csdn.net/zhongguomao/article/details/77774206 对于初写 ALV 的 A</description>
    </item>
    
    <item>
      <title> 报表开发&lt;ALV 显示设置&gt; </title>
      <link>https://coldinfire.github.io/2018/ABAP_ALV_Display/</link>
      <pubDate>Sat, 23 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2018/ABAP_ALV_Display/</guid>
      <description>ALV 显示 ALV 显示相关的 FM REUSE_ALV_LIST_DISPLAY：List 格式的 ALV 模式为固定格式，应用于较严格的标准报表。 REUSE_ALV</description>
    </item>
    
    <item>
      <title> 报表开发&lt;屏幕设置&gt; </title>
      <link>https://coldinfire.github.io/2018/ABAP_ALV_Screen/</link>
      <pubDate>Thu, 21 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2018/ABAP_ALV_Screen/</guid>
      <description>选择屏幕 屏幕触发事件 选择屏幕触发的是：AT SELECTION-SCREEN 对话屏幕触发的是：PAI 列表屏幕触发的是：AT USER-COMMAND 屏幕事件处理 ABAP 开发属于事件驱动开发，这句话也清晰</description>
    </item>
    
    <item>
      <title> 报表开发&lt;内表操作&gt; </title>
      <link>https://coldinfire.github.io/2018/ABAP_ALV_InnerTable/</link>
      <pubDate>Wed, 20 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2018/ABAP_ALV_InnerTable/</guid>
      <description>SQL 语句的执行顺序 书写顺序：SELECT [DISTINCT]&amp;ndash;&amp;gt;FROM&amp;ndash;&amp;gt;WHERE&amp;ndash;&amp;gt;GROUP BY&amp;ndash;&amp;gt;HAVING&amp;ndash;&amp;gt;UNION&amp;ndash;&amp;gt;ORDER BY 其执行顺序为：FROM&amp;ndash;&amp;gt;WHERE&amp;ndash;&amp;gt;GROUP BY&amp;ndash;&amp;gt;HAVING&amp;ndash;&amp;gt;SELECT&amp;ndash;&amp;gt;DISTINCT&amp;ndash;&amp;gt;UNION-&amp;gt;ORDER BY FROM 才是</description>
    </item>
    
    <item>
      <title> 报表开发&lt;概述&gt; </title>
      <link>https://coldinfire.github.io/2018/ABAP_ALV_Basic/</link>
      <pubDate>Mon, 18 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2018/ABAP_ALV_Basic/</guid>
      <description>ALV (SAP List Viewer) 是 SAP 常用的屏幕显示列表控件对象，通过传递数据内表方式显示数据； ALV 显示格式分为 Grid 和 List 两种模式。 Grid 模式有栏位选择按钮功能，允许用户直接输</description>
    </item>
    
    <item>
      <title> ALV 显示红绿灯 </title>
      <link>https://coldinfire.github.io/2018/ABAP_ALV_TrafficLight/</link>
      <pubDate>Thu, 14 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2018/ABAP_ALV_TrafficLight/</guid>
      <description>定义 TYPE-POOLS:icon,sym,slis,col. DATA: l_alv_filed TYPE slis_fieldcat_alv, l_alv_filedcat TYPE slis_t_fieldcat_alv. TYPES:BEGIN OF str_alv, id TYPE char25, xxx TYPE xxx, xxx TYPE xxx, xxx TYPE xxx, xxx TYPE string, END OF str_alv. DATA:it_alv TYPE STANDARD TABLE OF str_alv WITH HEADER LINE. CONSTANTS: c_green TYPE icon-id VALUE &amp;#39;@08@&amp;#39;, c_yellow TYPE icon-id VALUE &amp;#39;@09@&amp;#39;, c_red TYPE icon-id VALUE &amp;#39;@0A@&amp;#39;. 赋值 IF it_return-type = &amp;#39;E&amp;#39;. it_alv-id = c_red. CALL FUNCTION &amp;#39;BAPI_TRANSACTION_ROLLBACK&amp;#39;. ELSE. it_alv-id</description>
    </item>
    
    <item>
      <title> ALV 添加复选框，并添加全选，不全选 </title>
      <link>https://coldinfire.github.io/2018/ABAP_ALV_CHECKBOX/</link>
      <pubDate>Thu, 14 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2018/ABAP_ALV_CHECKBOX/</guid>
      <description>定义结构中定义该字段 DATA: BEGIN OF gt_print OCCURS 10, CHECKBOX TYPE flag, ...... DATA: END OF gt_print. FIELDCAT 添加 CheckBox &amp;#34;$. Region ALV_Data&amp;#34; TYPE-POOLS:slis. DATA: alv_fieldcat TYPE STANDARD TABLE OF slis_fieldcat_alv WITH HEADER LINE, alv_layout TYPE slis_layout_alv. alv_fieldcat-fieldname = &amp;#39;CHECKBOX&amp;#39;. alv_fieldcat-scrtext_m = &amp;#39;Choose&amp;#39;. alv_fieldcat-checkbox = &amp;#39;X&amp;#39;. alv_fieldcat-edit = &amp;#39;X&amp;#39;. alv_fieldcat-just = &amp;#39;C&amp;#39;. APPEND alv_fieldcat. 自定义按钮 FORM f_alv_user_command USING</description>
    </item>
    
  </channel>
</rss>
