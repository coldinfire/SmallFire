<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>abap on Small Fire`s Blog</title>
    <link>https://coldinfire.github.io/tags/abap/</link>
    <description>Recent content in abap on Small Fire`s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Wed, 27 Mar 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://coldinfire.github.io/tags/abap/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title> SAP下载程序源码工具 </title>
      <link>https://coldinfire.github.io/2019/ABAPUtils10/</link>
      <pubDate>Wed, 27 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2019/ABAPUtils10/</guid>
      <description>程序：转自 http://blog.sina.com.cn/s/blog_4d1570de0100pvhd.html *@---------------------------------------------------------------------* *@ Report ZZXUE01 下载程序代码 *@ T-code *@---------------------------------------------------------------------* *@ Created by Xavery Hsueh on 2011-03-01 *@ Lasted Edited date: *@---------------------------------------------------------------------* REPORT XXX NO STANDARD PAGE HEADING. ***********************************************************************@ ** 声明数据库表 ***********************************************************************@ TABLES:rs38m, trdir. &amp;quot; ***********************************************************************@ ** 内表结构类型的定义 ***********************************************************************@ DATA BEGIN OF dynpfields OCCURS 1. INCLUDE STRUCTURE dynpread.</description>
    </item>
    
    <item>
      <title> SAP发送邮件 </title>
      <link>https://coldinfire.github.io/2019/ABAPUtils11/</link>
      <pubDate>Wed, 27 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2019/ABAPUtils11/</guid>
      <description>TRY. &amp;quot; 创建发送请求 l_send_request = cl_bcs=&amp;gt;create_persistent( ). &amp;quot; 设定发送内容 l_document = cl_document_bcs=&amp;gt;create_document( i_type = &#39;RAW&#39; i_text = i_content[] I_IMPORTANCE = &#39;1&#39; i_subject = l_subject ). &amp;quot; 增加发送内容到发送请求 CALL METHOD l_send_request-&amp;gt;set_document( l_document ). &amp;quot; 取得发送者（取得发件人，前提是这个</description>
    </item>
    
    <item>
      <title>SAP后台JOB</title>
      <link>https://coldinfire.github.io/2019/ABAPJOB/</link>
      <pubDate>Fri, 22 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2019/ABAPJOB/</guid>
      <description>定义后台 job 第一种：SE38执行可执行程序 菜单栏‘program’&amp;mdash;&amp;gt;&amp;lsquo;Execute in Background&amp;rsquo; 输入输出设备 选择开始时</description>
    </item>
    
    <item>
      <title>SAP memory使用</title>
      <link>https://coldinfire.github.io/2019/ABAPMemory/</link>
      <pubDate>Mon, 04 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2019/ABAPMemory/</guid>
      <description>SAP memory和ABAP memory 使用的语句不同 SAP memory使用SET/GET parameters； SPA：SET PARAMETER ID &amp;lsquo;MAT&amp;rsquo; FIELD p_matnr. GPA：GET PARAMETER ID &amp;lsquo;MAT&amp;rsquo; FIELD</description>
    </item>
    
    <item>
      <title>ABAP DOI使用</title>
      <link>https://coldinfire.github.io/2019/ABAPDOI/</link>
      <pubDate>Fri, 22 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2019/ABAPDOI/</guid>
      <description>概述 DOI（Desktop office Integration）采用OO的思想实现与Office的结合使用。 可以先上传模板到服务器(OAOR)，然后对模</description>
    </item>
    
    <item>
      <title>STVARV使用详情</title>
      <link>https://coldinfire.github.io/2019/ABAPUtils14/</link>
      <pubDate>Thu, 14 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2019/ABAPUtils14/</guid>
      <description>STVARV使用 ​ 该配置不能跨Client因此需要在每个Client单独配置；使用TCode：stvarv进入配置界面，可以新建、修改、删除</description>
    </item>
    
    <item>
      <title> ALV tree显示BOM结构 </title>
      <link>https://coldinfire.github.io/2018/BOMTree/</link>
      <pubDate>Sun, 25 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2018/BOMTree/</guid>
      <description>代码 REPORT z_barry_alv_tree1_bom MESSAGE-ID oo. TABLES: stpox. INCLUDE &amp;lt;icon&amp;gt;. CLASS: cl_gui_column_tree DEFINITION LOAD, cl_gui_cfw DEFINITION LOAD . DATA: tree1 TYPE REF TO cl_gui_alv_tree , mr_toolbar TYPE REF TO cl_gui_toolbar . DATA: gs_stpox TYPE stpox, gt_stpox TYPE stpox OCCURS 0, gt_fieldcatalog TYPE lvc_t_fcat, gt_item_layout TYPE lvc_t_laci, gs_item_layout TYPE lvc_s_laci, okcode LIKE sy-ucomm . TYPES: BEGIN OF gs_f. INCLUDE STRUCTURE stpox. TYPES: node_key TYPE lvc_nkey, END OF gs_f. DATA: gs_xstpox TYPE</description>
    </item>
    
    <item>
      <title>ABAP 工作流</title>
      <link>https://coldinfire.github.io/2018/ABAPWorkFlow/</link>
      <pubDate>Sat, 24 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2018/ABAPWorkFlow/</guid>
      <description>SAP工作流介绍 工作流是一个基于某组程序规则所采用的路径。是自动运作的任务的进程中，参与的人、文件、信息或任务，以及各个要素间的传递按照规程</description>
    </item>
    
    <item>
      <title>Excle操作</title>
      <link>https://coldinfire.github.io/2018/ABAPExcel/</link>
      <pubDate>Tue, 13 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2018/ABAPExcel/</guid>
      <description>使用 BAPI 1. 内表数据下载到文件: CALL FUNCTION &#39;DOWNLOAD&#39;：提示保存 CALL FUNCTION &#39;WS_DOWNLOAD&#39;：不提示直接保存 CALL FUNCTION &#39;DOWNLOAD_WEB_</description>
    </item>
    
    <item>
      <title>BAPI总结列表</title>
      <link>https://coldinfire.github.io/2018/ABAPBAPI/</link>
      <pubDate>Sun, 14 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2018/ABAPBAPI/</guid>
      <description>本文主要记录一些收集来的BAPI,在SE38环境下的程序名输入栏输入&amp;rsquo;DEMO&amp;lsquo;后按F4，你可以查到SAP所有的DE</description>
    </item>
    
    <item>
      <title>RFC外部调用</title>
      <link>https://coldinfire.github.io/2018/ABAPRFC/</link>
      <pubDate>Fri, 12 Oct 2018 15:15:42 +0800</pubDate>
      
      <guid>https://coldinfire.github.io/2018/ABAPRFC/</guid>
      <description>RFC 什么是 RFC ​ RFC 是 SAP 系统和其他（SAP 或非 SAP）系统间的一个重要而常用的双向接口技术，也被视为 SAP 与外部通信的基本协议。简单地说，RFC 过程就</description>
    </item>
    
    <item>
      <title> 财务凭证冲销 </title>
      <link>https://coldinfire.github.io/2018/ABAPUtils9/</link>
      <pubDate>Thu, 20 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2018/ABAPUtils9/</guid>
      <description>凭证的更改 1：已经过帐的 TCODE：FB02. ​ 过完帐的允许更改的地方有限，只有凭证抬头文本，参照，分配，文本，原因代码等 2：预制凭证的更改</description>
    </item>
    
    <item>
      <title>可输入弹出框</title>
      <link>https://coldinfire.github.io/2018/ABAPUtils5/</link>
      <pubDate>Fri, 10 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2018/ABAPUtils5/</guid>
      <description>POPUP_GET_VALUES_USER_HELP 输入表格，SVAL相应的字段信息决定显示的效果： tabname = &#39;AFKO&#39;. fieldname = &#39;AUFNR&#39;. fieldtext = &#39;生产订单号&#39;. field_attr = &#39;02&#39;. //是否可输入和显示 value = &#39;val&#39;. CALL FUNCTION &#39;POPUP_GET_VALUES_USER_HELP&#39; EXPORTING * F1_FORMNAME = &#39; &#39; * F1_PROGRAMNAME = &#39;</description>
    </item>
    
    <item>
      <title>工具合计</title>
      <link>https://coldinfire.github.io/2018/ABAPUtils1/</link>
      <pubDate>Thu, 09 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2018/ABAPUtils1/</guid>
      <description>判断是否包含特定值 IF field CN &amp;lsquo;0123456789&amp;rsquo;. IF field CN &amp;lsquo;ABCDEFG*&amp;rsquo; IF field CN &amp;lsquo;abcdefg*&amp;rsquo; IF field CN &amp;lsquo;/&amp;rsquo; &amp;hellip;.. CN：Contains Not Only (包含，不仅包含) CO：Contains Only（仅包含） CS</description>
    </item>
    
    <item>
      <title> ALV Tree标准Demo </title>
      <link>https://coldinfire.github.io/2018/ABAPUtils13/</link>
      <pubDate>Sun, 24 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2018/ABAPUtils13/</guid>
      <description>Demo列表 BCALV_TREE_01 ALV 树控制：构建层次树 BCALV_TREE_02 ALV 树控制：事件处理 BCALV_TREE_03 ALV 树控制：使用自己的上下文菜单 BCALV_TREE_04 ALV 树控制：添加按钮到工具栏 BCALV_TREE_05 ALV 树控制：添加菜单到工具</description>
    </item>
    
    <item>
      <title> ABAP通过字段找表程序 </title>
      <link>https://coldinfire.github.io/2018/ABAPUtils12/</link>
      <pubDate>Wed, 20 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2018/ABAPUtils12/</guid>
      <description>获取数据保存在哪个表 前台对指定栏位 使用 F1 帮助找表 ST05 跟踪业务操作过程，检索需要的数据表.（此方法找表很高效） 对于文本字段找表，可以找到前台维护</description>
    </item>
    
    <item>
      <title> SM30表维护 </title>
      <link>https://coldinfire.github.io/2018/ABAPUtils8/</link>
      <pubDate>Mon, 18 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2018/ABAPUtils8/</guid>
      <description>表维护创建 创建自定义表 需要设置为 Display/Maintenance Allowed.允许修改，才可以在SM30中进行数据维护。否则会产生以下异常： 创建表维护 权限组：控制访问权</description>
    </item>
    
    <item>
      <title> SAP流水号 </title>
      <link>https://coldinfire.github.io/2018/ABAPUtils7/</link>
      <pubDate>Sun, 17 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2018/ABAPUtils7/</guid>
      <description>TCode SNRO OYSM 读取函数 NUMBER_GET_NEXT 相关表 NRIV TNRO 函数组 SNR0 Online maint. of number ranges &amp;amp; groups SNR1 Interface for number ranges and groups SNR2 Maintenance of number range objects SNR3 Number range checks, assignment &amp;amp; info SNR4 Number ranges utility 使用 如有跳号现象，可以禁用对象的 Buffer 试试 5NZ</description>
    </item>
    
    <item>
      <title>业务流程</title>
      <link>https://coldinfire.github.io/2018/ABAPSumory/</link>
      <pubDate>Sun, 17 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2018/ABAPSumory/</guid>
      <description>PP流程 MM01(Material)-&amp;gt;CS01(BOM)-&amp;gt;CR01(WORKCENTERY)-&amp;gt;CA01(ROUTING)-&amp;gt;MD11(PLANNED ORDER)-&amp;gt; COO1(PRODUCTION ORDERS)也可通过CO41/CO40转换计划单得来. COMAC:对生产订单进行可用性检查 COHVOMPRINT:打印订单 M</description>
    </item>
    
    <item>
      <title> ABAP学习网站记录 </title>
      <link>https://coldinfire.github.io/2018/ABAPWebSite/</link>
      <pubDate>Sat, 16 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2018/ABAPWebSite/</guid>
      <description>http://www.saptechnical.com/index.htm：需要检索关键信息 https://sapcodes.com/：包含</description>
    </item>
    
    <item>
      <title> ABAP截取字符串长度 </title>
      <link>https://coldinfire.github.io/2018/ABAPUtils6/</link>
      <pubDate>Sat, 16 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2018/ABAPUtils6/</guid>
      <description>截取包含中文字符串 strlen()只能计算包含英文字符串的长度，不能计算中文字符串的长度。 可以通过cl_abap_list_utilitie</description>
    </item>
    
    <item>
      <title>红绿灯</title>
      <link>https://coldinfire.github.io/2018/ABAPUtils4/</link>
      <pubDate>Thu, 14 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2018/ABAPUtils4/</guid>
      <description>定义 TYPE-POOLS:icon,sym,slis,col. DATA: l_alv_filed TYPE slis_fieldcat_alv, l_alv_filedcat TYPE slis_t_fieldcat_alv. TYPES:BEGIN OF str_alv, id TYPE char25, xxx TYPE xxx, xxx TYPE xxx, xxx TYPE xxx, xxx TYPE string, END OF str_alv. DATA:it_alv TYPE STANDARD TABLE OF str_alv WITH HEADER LINE. CONSTANTS: c_green TYPE icon-id VALUE &#39;@08@&#39;, c_yellow TYPE icon-id VALUE &#39;@09@&#39;, c_red TYPE icon-id VALUE &#39;@0A@&#39;. 赋值 IF it_return-type = &#39;E&#39;. it_alv-id = c_red. CALL FUNCTION &#39;BAPI_TRANSACTION_ROLLBACK&#39;. ELSE. it_alv-id</description>
    </item>
    
    <item>
      <title>小数后面去除后缀0</title>
      <link>https://coldinfire.github.io/2018/ABAPUtils2/</link>
      <pubDate>Wed, 13 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2018/ABAPUtils2/</guid>
      <description>小数后面去除后缀0 form DATA_DELETE_ZERO using p_field z_result. DATA:var1 TYPE p DECIMALS 3, var2 TYPE p DECIMALS 2, var3 TYPE p DECIMALS 1, var4 TYPE i. move p_field to var1. move p_field to var2. move p_field to var3. move p_field to var4. IF var2 = var1. IF var3 = var1. IF var4 = var1. z_result = var4. ELSE. z_result = var3. ENDIF. ELSE. z_result</description>
    </item>
    
    <item>
      <title>负号前置</title>
      <link>https://coldinfire.github.io/2018/ABAPUtils3/</link>
      <pubDate>Wed, 13 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2018/ABAPUtils3/</guid>
      <description>负号前置 定义函数：CONVERSION_EXIT_Z001_OUTPUT. FUNCTION conversion_exit_z001_output. *&amp;quot;---------------------------------------------------------------------- *&amp;quot;*&amp;quot;本地接口： *&amp;quot; IMPORTING *&amp;quot; REFERENCE(INPUT) *&amp;quot; EXPORTING *&amp;quot; REFERENCE(OUTPUT) *&amp;quot;---------------------------------------------------------------------- *作</description>
    </item>
    
    <item>
      <title>添加修改人信息</title>
      <link>https://coldinfire.github.io/2018/ABAPUtils/</link>
      <pubDate>Mon, 11 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2018/ABAPUtils/</guid>
      <description>添加修改人信息 可以根据TCode进行相应的判断： 创建人信息: l_wa_head-ernam = sy-uname. l_wa_head-erdat = sy-datum. l_wa_head-erzet = sy-uzeit. call function &#39;TERMINAL_ID_GET&#39; exporting username = sy-uname importing terminal = l_wa_head-eterminal exceptions multiple_terminal_id = 1 no_terminal_found = 2 others = 3. 修改人信息： l_wa_head-urnam = sy-uname. l_wa_head-urdat</description>
    </item>
    
    <item>
      <title>ABAP程序间调用</title>
      <link>https://coldinfire.github.io/2018/ABAP6/</link>
      <pubDate>Tue, 05 Jun 2018 17:20:58 +0800</pubDate>
      
      <guid>https://coldinfire.github.io/2018/ABAP6/</guid>
      <description>同步调用 在一个程序中调用其他ABAP程序。有两种方式 中断执行 调用程序被打断，当被调用程序执行完毕之后，调用程序继续执行。 CALL FUNCTION [function] SUBMIT [program] AND RETURN CALL TRANSACTION [TCode]</description>
    </item>
    
    <item>
      <title>ABAP 语法详解(优化)</title>
      <link>https://coldinfire.github.io/2018/ABAP5/</link>
      <pubDate>Fri, 01 Jun 2018 17:20:58 +0800</pubDate>
      
      <guid>https://coldinfire.github.io/2018/ABAP5/</guid>
      <description>效率优化 数据库 不要使用 SELECT * &amp;hellip;，选择需要的字段, SELECT * 既浪费CPU，还需占用大量的ABAP内存 不要使用SELECT DISTINCT .，会绕过缓存</description>
    </item>
    
    <item>
      <title>ABAP 语法详解(SQL)</title>
      <link>https://coldinfire.github.io/2018/ABAP4/</link>
      <pubDate>Thu, 24 May 2018 17:20:58 +0800</pubDate>
      
      <guid>https://coldinfire.github.io/2018/ABAP4/</guid>
      <description>MESSAGES SE91定义: 设置消息类，保存该Function的多条消息定义，通过‘&amp;amp;’定义多个占位符。 MESSAGE E001(ZTEST). ​ E:消息显示类型 (E[Error]</description>
    </item>
    
    <item>
      <title>ABAP 语法详解(Field&amp;Form)</title>
      <link>https://coldinfire.github.io/2018/ABAP3/</link>
      <pubDate>Sun, 20 May 2018 17:20:58 +0800</pubDate>
      
      <guid>https://coldinfire.github.io/2018/ABAP3/</guid>
      <description>字符串处理 合并字符串： CONCATENATE var1 var2 INTO result [SEPARATED BY sep] [RESPECTING BLANKS]. ​ C,D,N,T类型的前导空格会保留，尾部空格会去掉，对String类型的所有空格都会保留； ​ se</description>
    </item>
    
    <item>
      <title>ABAP 语法详解(内表)</title>
      <link>https://coldinfire.github.io/2018/ABAP2/</link>
      <pubDate>Wed, 16 May 2018 17:20:58 +0800</pubDate>
      
      <guid>https://coldinfire.github.io/2018/ABAP2/</guid>
      <description>内表定义和使用 内表定义 工作区域：工作区域可以存放多个变量数据。 ​ 直接定义：DATA: BEGIN OF &amp;lt;str&amp;gt; END OF &amp;lt;str&amp;gt;. ​ 参照DB或则结构：DATA &amp;lt;wa&amp;gt; TYPE &amp;lt;dbtab&amp;gt;|&amp;lt;str&amp;gt;. ​ 参照内表</description>
    </item>
    
    <item>
      <title>ABAP 语法详解(数据类型)</title>
      <link>https://coldinfire.github.io/2018/ABAP1/</link>
      <pubDate>Sat, 12 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2018/ABAP1/</guid>
      <description>ABAP基本数据类型 基本数据类型 C : Character text D : Date(YYYYMMDD) P : Packed(包类型:1-16) N : Numeric text(不能进行计算) T : Time(HHMMSS) X : 十六进制 I : Interger F :</description>
    </item>
    
  </channel>
</rss>