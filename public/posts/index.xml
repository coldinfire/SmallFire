<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Small Fire`s Blog</title>
    <link>https://coldinfire.github.io/posts/</link>
    <description>Recent content in Posts on Small Fire`s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 22 Apr 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://coldinfire.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title> Fiori简介 </title>
      <link>https://coldinfire.github.io/2019/FioriOverview/</link>
      <pubDate>Mon, 22 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2019/FioriOverview/</guid>
      <description>框架设计 SAP Fiori UI5有五种设计原则。这些原则使SAP Fiori变得简单，并将不同的事务分解为基于任务的简单UI应用程序。 基于角色 - SAP已经分</description>
    </item>
    
    <item>
      <title> SAP HANA</title>
      <link>https://coldinfire.github.io/2019/SAPHANA1/</link>
      <pubDate>Thu, 18 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2019/SAPHANA1/</guid>
      <description>了解 HANA 的途径有 http://help.sap.com http://www.sdn.sap.com/irj/sdn/in-memory http://service.sap.com/hana HANA主要组成成分 客户端：HANA Studio(In-memory studio) 内存内数据库：HANA Database 数据复制组件：SLT/Sybase Replication Sever/BusinessObjects DataServices 三种复制数据方法</description>
    </item>
    
    <item>
      <title> SAPUI5 </title>
      <link>https://coldinfire.github.io/2019/SAPUI5/</link>
      <pubDate>Tue, 16 Apr 2019 17:20:58 +0800</pubDate>
      
      <guid>https://coldinfire.github.io/2019/SAPUI5/</guid>
      <description>概述 MVC模式 ​ MVC是程序设计的思想实现，通过将界面展示，用户操作，程序数据进行分离，降低模块间的耦合性，有利于项目的开发和维护。 ​ M : Model</description>
    </item>
    
    <item>
      <title>移库产生的报错</title>
      <link>https://coldinfire.github.io/2019/SAPQ1/</link>
      <pubDate>Sun, 14 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2019/SAPQ1/</guid>
      <description>Q：当进行移库操作时，同一个程序中执行多次移库动作会产生Error Message:No status object is available for HU XXXXXX(Error BS001 when posting goods movment)? A：需要每次进行移库前刷新数据： &amp;ldquo;调</description>
    </item>
    
    <item>
      <title> SAP下载程序源码工具 </title>
      <link>https://coldinfire.github.io/2019/ABAPUtils10/</link>
      <pubDate>Wed, 10 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2019/ABAPUtils10/</guid>
      <description>程序：转自 http://blog.sina.com.cn/s/blog_4d1570de0100pvhd.html *@---------------------------------------------------------------------* *@ Report ZZXUE01 下载程序代码 *@ T-code *@---------------------------------------------------------------------* *@ Created by Xavery Hsueh on 2011-03-01 *@ Lasted Edited date: *@---------------------------------------------------------------------* REPORT XXX NO STANDARD PAGE HEADING. ***********************************************************************@ ** 声明数据库表 ***********************************************************************@ TABLES:rs38m, trdir. &amp;quot; ***********************************************************************@ ** 内表结构类型的定义 ***********************************************************************@ DATA BEGIN OF dynpfields OCCURS 1. INCLUDE STRUCTURE dynpread.</description>
    </item>
    
    <item>
      <title> SAP发送邮件 </title>
      <link>https://coldinfire.github.io/2019/ABAPUtils11/</link>
      <pubDate>Mon, 08 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2019/ABAPUtils11/</guid>
      <description>TRY. &amp;quot; 创建发送请求 l_send_request = cl_bcs=&amp;gt;create_persistent( ). &amp;quot; 设定发送内容 l_document = cl_document_bcs=&amp;gt;create_document( i_type = &#39;RAW&#39; i_text = i_content[] I_IMPORTANCE = &#39;1&#39; i_subject = l_subject ). &amp;quot; 增加发送内容到发送请求 CALL METHOD l_send_request-&amp;gt;set_document( l_document ). &amp;quot; 取得发送者（取得发件人，前提是这个</description>
    </item>
    
    <item>
      <title>SAP后台JOB</title>
      <link>https://coldinfire.github.io/2019/ABAPJOB/</link>
      <pubDate>Fri, 05 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2019/ABAPJOB/</guid>
      <description>定义后台 job 第一种：SE38执行可执行程序 菜单栏‘program’&amp;mdash;&amp;gt;&amp;lsquo;Execute in Background&amp;rsquo; 输入输出设备 选择开始时</description>
    </item>
    
    <item>
      <title>STO详解</title>
      <link>https://coldinfire.github.io/2019/ABAPSTO/</link>
      <pubDate>Mon, 01 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2019/ABAPSTO/</guid>
      <description>一、工厂间转储 （1）MB1B 移动类型 301 工厂到工厂（一步）转账 -&amp;gt; 简单明了一步转储；过账后会产生 GR，MITA 增加了，MIZH 减少了， MB03：</description>
    </item>
    
    <item>
      <title>库存管理</title>
      <link>https://coldinfire.github.io/2019/MMInventoryManagement/</link>
      <pubDate>Sat, 23 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2019/MMInventoryManagement/</guid>
      <description>一、基本介绍 1.库存类型 ​ 可用库存：可通过BAPI_MATERIAL_AVAILABILITY来获取 ​ 当前库存：一般保存在MARD-LABS</description>
    </item>
    
    <item>
      <title>收货</title>
      <link>https://coldinfire.github.io/2019/MMGoodsReceive/</link>
      <pubDate>Wed, 20 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2019/MMGoodsReceive/</guid>
      <description>1.收货发票 Post Goods Receipt Invoice (GRIN) : MIGO ​ GRIN清单：供应商发票上的PO# 与Org PO #相同 ​ 供应商地址和采购订单地址匹配 ​ 物料数量应在Org PO中可用 ​</description>
    </item>
    
    <item>
      <title>Info Record</title>
      <link>https://coldinfire.github.io/2019/MMInfoRecord/</link>
      <pubDate>Tue, 19 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2019/MMInfoRecord/</guid>
      <description>创建Info Record 信息记录 (Info record)**：一个物料在某个供应商那里，卖多少钱，有什么特殊条件等信息的存储。 创建方式：手工输入，报价单选择，</description>
    </item>
    
    <item>
      <title>RFQ</title>
      <link>https://coldinfire.github.io/2019/MMPurchaseRFQ/</link>
      <pubDate>Mon, 18 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2019/MMPurchaseRFQ/</guid>
      <description>Request For Quotation (RFQ): ME41 /42/43 SPRO &amp;gt; IMG &amp;gt; Logistics &amp;gt; MM &amp;gt; Purchasing &amp;gt; RFQ/Quotation &amp;gt; RFQ Enter REQ type,Date limit,Purch Org,Purch Group, Plant ,Storage Location Enter Collective No to track of all RFQ related to particular instance and ref data Enter the appropriate item category Enter the material NO , RFQ Quantity Enter the Deliv. Date，Plant code ,</description>
    </item>
    
    <item>
      <title>有库存的采购</title>
      <link>https://coldinfire.github.io/2019/MMPurchase/</link>
      <pubDate>Sat, 16 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2019/MMPurchase/</guid>
      <description>采购流程： 单据流： 仓库数量被预约(采购订单下达) 收货采购订单，总账增加，库存成本增加； 应付账款不改变库存数量，根据数量和价格计算价格； 采购物</description>
    </item>
    
    <item>
      <title>供应商主数据创建</title>
      <link>https://coldinfire.github.io/2019/MMVenderCreate/</link>
      <pubDate>Thu, 14 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2019/MMVenderCreate/</guid>
      <description>1.Define vendor account groups : OBD3 SPRO &amp;gt; IMG &amp;gt; Financial accounting &amp;gt; Accounts Receivable and Accounts Payable &amp;gt; Vendor Accounts &amp;gt; Master data &amp;gt; preparation for creating vendor master data &amp;gt; Define Account groups with screen layout(Vendors) ​ &amp;lt;1.Enter Account group Code and Name. ​ &amp;lt;2.Choose: Company code data and select Account management under group. ​ &amp;lt;3.Select Reconciliation account（对账账</description>
    </item>
    
    <item>
      <title>MM 物料主数据创建</title>
      <link>https://coldinfire.github.io/2019/MMMasterData/</link>
      <pubDate>Tue, 12 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2019/MMMasterData/</guid>
      <description>Enterprise Struture 1.Define Company : OX15 SPRO -&amp;gt; IMG -&amp;gt;Enterprise Structure -&amp;gt; Definition -&amp;gt; Financial Account -&amp;gt; Define Company 1.Enter company 2.Enter company name 3.Update address 4.Enter country code of company 5.Enter language key 6.Enter local currency 2.Define Company Code : OX02 SPRO -&amp;gt; IMG -&amp;gt;Enterprise Structure -&amp;gt; Definition -&amp;gt; Financial Account -&amp;gt; Edit,Copy,Delete Company Code 3.Assign Company Code to Company : OX16 SPRO -&amp;gt; IMG -&amp;gt;Enterprise Structure -&amp;gt; Definition</description>
    </item>
    
    <item>
      <title>MM概述(二)</title>
      <link>https://coldinfire.github.io/2019/MMDetail2/</link>
      <pubDate>Mon, 11 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2019/MMDetail2/</guid>
      <description>库存采购基础 采购流程： 1. MRP &amp;amp; Purch.Req (Determination of reqmts)（确认需求） 2. Source determination (购买方式和货源) 3. Vendor selection （跟哪个供应商买） 4. Request for Quotation (要求报价) 5. Purchase Requisition (采购</description>
    </item>
    
    <item>
      <title>MM概述(一)</title>
      <link>https://coldinfire.github.io/2019/MMDetail1/</link>
      <pubDate>Sun, 10 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2019/MMDetail1/</guid>
      <description>企业组织结构 整体架构 集团：是 R/3 系统里的一个商业的组织层次。有自己的数据、主记录及各种报表。从业务角度看，集团当作各个实体的组合。 公司代码：一</description>
    </item>
    
    <item>
      <title>MM Summary</title>
      <link>https://coldinfire.github.io/2019/MMSummary/</link>
      <pubDate>Thu, 07 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2019/MMSummary/</guid>
      <description>MM概要 业务 (采购询价 ME41 / 报价 ME47 录入、ME49 报价比较)&amp;mdash;-&amp;gt; 采购申请 (PR)&amp;mdash;-&amp;gt; 采购订单 (PO)&amp;mdash;-&amp;gt; 发送采购单给供应商 &amp;lt; ME9F&amp;gt;&amp;mdash;-&amp;gt; 采购收货 (产生物料</description>
    </item>
    
    <item>
      <title>SAP memory使用</title>
      <link>https://coldinfire.github.io/2019/ABAPMemory/</link>
      <pubDate>Mon, 04 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2019/ABAPMemory/</guid>
      <description>SAP memory和ABAP memory 使用的语句不同 SAP memory使用SET/GET parameters； SPA：SET PARAMETER ID &amp;lsquo;MAT&amp;rsquo; FIELD p_matnr. GPA：GET PARAMETER ID &amp;lsquo;MAT&amp;rsquo; FIELD</description>
    </item>
    
    <item>
      <title>ABAP DOI使用</title>
      <link>https://coldinfire.github.io/2019/ABAPDOI/</link>
      <pubDate>Fri, 22 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2019/ABAPDOI/</guid>
      <description>概述 DOI（Desktop office Integration）采用OO的思想实现与Office的结合使用。 可以先上传模板到服务器(OAOR)，然后对模</description>
    </item>
    
    <item>
      <title>STVARV使用详情</title>
      <link>https://coldinfire.github.io/2019/ABAPUtils14/</link>
      <pubDate>Thu, 14 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2019/ABAPUtils14/</guid>
      <description>STVARV使用 ​ 该配置不能跨Client因此需要在每个Client单独配置；使用TCode：stvarv进入配置界面，可以新建、修改、删除</description>
    </item>
    
    <item>
      <title> Python基础 </title>
      <link>https://coldinfire.github.io/2019/Python1/</link>
      <pubDate>Wed, 16 Jan 2019 17:20:58 +0800</pubDate>
      
      <guid>https://coldinfire.github.io/2019/Python1/</guid>
      <description>变量定义和数据类型 变量定义 Python的变量命名规则： 硬性规则： 变量由字母、数字和下划线构成，不能以数字开头 大小写敏感 不能跟python的关</description>
    </item>
    
    <item>
      <title> Python学习资源</title>
      <link>https://coldinfire.github.io/2019/PythonResource/</link>
      <pubDate>Mon, 14 Jan 2019 17:20:58 +0800</pubDate>
      
      <guid>https://coldinfire.github.io/2019/PythonResource/</guid>
      <description>资源 Python 官网 包含了 Python 框架、Python 库和软件的 awesome 列表 Python 神书，里面有若干个项目，每个项目都是由业内大神所写，每个项目代码在 500 行左右 介绍 Python3 中的标</description>
    </item>
    
    <item>
      <title> Pycharm </title>
      <link>https://coldinfire.github.io/2019/Pycharm/</link>
      <pubDate>Thu, 03 Jan 2019 17:20:58 +0800</pubDate>
      
      <guid>https://coldinfire.github.io/2019/Pycharm/</guid>
      <description>Paycharm 常用快捷键 1、Ctrl + Enter：在下方新建行但不移动光标 2、Shift + Enter：在下方新建行并移到新行行首 3、Ctrl + /：注释(</description>
    </item>
    
    <item>
      <title> ALV tree显示BOM结构 </title>
      <link>https://coldinfire.github.io/2018/BOMTree/</link>
      <pubDate>Sun, 25 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2018/BOMTree/</guid>
      <description>代码 REPORT z_barry_alv_tree1_bom MESSAGE-ID oo. TABLES: stpox. INCLUDE &amp;lt;icon&amp;gt;. CLASS: cl_gui_column_tree DEFINITION LOAD, cl_gui_cfw DEFINITION LOAD . DATA: tree1 TYPE REF TO cl_gui_alv_tree , mr_toolbar TYPE REF TO cl_gui_toolbar . DATA: gs_stpox TYPE stpox, gt_stpox TYPE stpox OCCURS 0, gt_fieldcatalog TYPE lvc_t_fcat, gt_item_layout TYPE lvc_t_laci, gs_item_layout TYPE lvc_s_laci, okcode LIKE sy-ucomm . TYPES: BEGIN OF gs_f. INCLUDE STRUCTURE stpox. TYPES: node_key TYPE lvc_nkey, END OF gs_f. DATA: gs_xstpox TYPE</description>
    </item>
    
    <item>
      <title>BOM展开</title>
      <link>https://coldinfire.github.io/2018/BOM/</link>
      <pubDate>Sun, 25 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2018/BOM/</guid>
      <description>SAP BOM读取逻辑 相关表 MAST：Material BOM STKO : BOM Header STPO : BOM Positions (detail) MAPL : Assignment fo Task Lists to Materials PLKO : Routing Group Header PLSO : Routing Group Sequence PLPO : Routing Group Operations AFKO : Production Order Header AFPO : Production Order Position (details) 可用</description>
    </item>
    
    <item>
      <title>ABAP 工作流</title>
      <link>https://coldinfire.github.io/2018/ABAPWorkFlow/</link>
      <pubDate>Sat, 24 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2018/ABAPWorkFlow/</guid>
      <description>SAP工作流介绍 工作流是一个基于某组程序规则所采用的路径。是自动运作的任务的进程中，参与的人、文件、信息或任务，以及各个要素间的传递按照规程</description>
    </item>
    
    <item>
      <title>Excle操作</title>
      <link>https://coldinfire.github.io/2018/ABAPExcel/</link>
      <pubDate>Tue, 13 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2018/ABAPExcel/</guid>
      <description>使用 BAPI 1. 内表数据下载到文件: CALL FUNCTION &#39;DOWNLOAD&#39;：提示保存 CALL FUNCTION &#39;WS_DOWNLOAD&#39;：不提示直接保存 CALL FUNCTION &#39;DOWNLOAD_WEB_</description>
    </item>
    
    <item>
      <title>SAP Query操作</title>
      <link>https://coldinfire.github.io/2018/ABAPQuery/</link>
      <pubDate>Sun, 28 Oct 2018 15:15:42 +0800</pubDate>
      
      <guid>https://coldinfire.github.io/2018/ABAPQuery/</guid>
      <description>Query</description>
    </item>
    
    <item>
      <title>IDoc操作</title>
      <link>https://coldinfire.github.io/2018/ABAPIDoc/</link>
      <pubDate>Mon, 22 Oct 2018 15:15:42 +0800</pubDate>
      
      <guid>https://coldinfire.github.io/2018/ABAPIDoc/</guid>
      <description>IDoc IDoc:是基于文档，用作异步传输数据的载体，类似于XML ● IDoc支持异步、同步、可以收集一定数量的包后发送，最重要的是，IDOC有完整</description>
    </item>
    
    <item>
      <title> WebDynpro </title>
      <link>https://coldinfire.github.io/2018/WebDynpro/</link>
      <pubDate>Tue, 16 Oct 2018 17:20:58 +0800</pubDate>
      
      <guid>https://coldinfire.github.io/2018/WebDynpro/</guid>
      <description>简介 Web Dynpro 在业务应用程序的主要结构和视觉设计部分的方式，在很大程度上是独立于实现语言. 一个Web Dynpro 组件不是一个JAVA类，而是一系列类集合所有</description>
    </item>
    
    <item>
      <title>BAPI使用</title>
      <link>https://coldinfire.github.io/2018/BAPI/</link>
      <pubDate>Tue, 16 Oct 2018 15:15:42 +0800</pubDate>
      
      <guid>https://coldinfire.github.io/2018/BAPI/</guid>
      <description>BAPI：Business Application Process Interface(业务应用编辑接口)，它实质上就是一种特殊的RFC函数。 BAPI函数及函数参数参考的结构类型</description>
    </item>
    
    <item>
      <title>BAPI总结列表</title>
      <link>https://coldinfire.github.io/2018/ABAPBAPI/</link>
      <pubDate>Sun, 14 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2018/ABAPBAPI/</guid>
      <description>本文主要记录一些收集来的BAPI,在SE38环境下的程序名输入栏输入&amp;rsquo;DEMO&amp;lsquo;后按F4，你可以查到SAP所有的DE</description>
    </item>
    
    <item>
      <title>RFC外部调用</title>
      <link>https://coldinfire.github.io/2018/ABAPRFC/</link>
      <pubDate>Fri, 12 Oct 2018 15:15:42 +0800</pubDate>
      
      <guid>https://coldinfire.github.io/2018/ABAPRFC/</guid>
      <description>RFC 什么是 RFC ​ RFC 是 SAP 系统和其他（SAP 或非 SAP）系统间的一个重要而常用的双向接口技术，也被视为 SAP 与外部通信的基本协议。简单地说，RFC 过程就</description>
    </item>
    
    <item>
      <title>BDC屏幕录制</title>
      <link>https://coldinfire.github.io/2018/BDC/</link>
      <pubDate>Wed, 26 Sep 2018 19:15:42 +0800</pubDate>
      
      <guid>https://coldinfire.github.io/2018/BDC/</guid>
      <description>定义 Batch data communication BDC：SAP常用的一种数据传输方法。用于一些数据量大，但对速度要求不高的数据传输. 使用步骤： 把外部的数据源(Txt,Excel 等</description>
    </item>
    
    <item>
      <title>Authorization</title>
      <link>https://coldinfire.github.io/2018/Authorization/</link>
      <pubDate>Sat, 22 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2018/Authorization/</guid>
      <description>简介 TCode ​ SU01：查看和编辑Role ​ SU10：实现对用户组的批量维护 ​ SU20：权限字段清单，可以增、删、改权限字段，可以浏览字段具体被哪</description>
    </item>
    
    <item>
      <title> 财务凭证冲销 </title>
      <link>https://coldinfire.github.io/2018/ABAPUtils9/</link>
      <pubDate>Thu, 20 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2018/ABAPUtils9/</guid>
      <description>凭证的更改 1：已经过帐的 TCODE：FB02. ​ 过完帐的允许更改的地方有限，只有凭证抬头文本，参照，分配，文本，原因代码等 2：预制凭证的更改</description>
    </item>
    
    <item>
      <title>查找增强程序1</title>
      <link>https://coldinfire.github.io/2018/ABAPEnhance1/</link>
      <pubDate>Fri, 14 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2018/ABAPEnhance1/</guid>
      <description>利用t-code查找增强出口的程序工具 REPORT zdamon_005 NO STANDARD PAGE HEADING. TABLES : tstc, tadir, modsapt, modact, trdir, tfdir, enlfdir. TABLES : tstct. DATA : jtab LIKE tadir OCCURS 0 WITH HEADER LINE. DATA : field1(30). DATA : v_devclass LIKE tadir-devclass. PARAMETERS : p_tcode LIKE tstc-tcode OBLIGATORY. SELECT SINGLE * FROM tstc WHERE tcode EQ p_tcode.</description>
    </item>
    
    <item>
      <title>查找增强程序2</title>
      <link>https://coldinfire.github.io/2018/ABAPEnhance2/</link>
      <pubDate>Fri, 14 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2018/ABAPEnhance2/</guid>
      <description>查找增强出口和BADI *&amp;amp;---------------------------------------------------------------------* *&amp;amp; Report Z_FIND_EXIT_AND_BADI *&amp;amp; *&amp;amp;---------------------------------------------------------------------* *&amp;amp; *&amp;amp; *&amp;amp;---------------------------------------------------------------------* report z_find_exit_and_badi no standard page heading. *&amp;amp;---------------------------------------------------------------------* *&amp;amp; Enter the transaction code that you want to search through in order *&amp;amp; to find which Standard SAP User Exits and BADIs *&amp;amp; *&amp;amp;---------------------------------------------------------------------* *&amp;amp; For field &#39;SUBC&#39; of table &#39;TRDIR&#39;: *&amp;amp; M Module Pool *&amp;amp; F Function group *&amp;amp; S Subroutine</description>
    </item>
    
    <item>
      <title>查找增强程序3</title>
      <link>https://coldinfire.github.io/2018/ABAPEnhance3/</link>
      <pubDate>Fri, 14 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2018/ABAPEnhance3/</guid>
      <description>一个功能非常全面的增强出口查找工具 *&amp;amp;--------------------------------------------------------------------&amp;amp;* *&amp;amp; Report: zdamon_004 (V9) &amp;amp;* *&amp;amp; PJA Consultancy Services (www.pjas.com) &amp;amp;* *&amp;amp;--------------------------------------------------------------------&amp;amp;* *&amp;amp; This report attmpts to find Enhancements, Program-Exits, BADIs &amp;amp;* *&amp;amp; and Business Transaction Events in a particular program/tcode. &amp;amp;* *&amp;amp; Last updated: 09 May 2007 &amp;amp;* *&amp;amp;--------------------------------------------------------------------&amp;amp;* *&amp;amp; Selection Texts: *&amp;amp; P_ALV ALV format *&amp;amp; P_AUTH Include authority-check search</description>
    </item>
    
    <item>
      <title>增强</title>
      <link>https://coldinfire.github.io/2018/ABAPEnhance/</link>
      <pubDate>Thu, 13 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2018/ABAPEnhance/</guid>
      <description>基本概念 User Exits：是系统中预留的一些空的Form/Subroutine，获得Access key后可以在Form中写入自己的逻辑。 用户出口</description>
    </item>
    
    <item>
      <title>Dialog程序</title>
      <link>https://coldinfire.github.io/2018/ABAPDialog/</link>
      <pubDate>Tue, 28 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2018/ABAPDialog/</guid>
      <description>TCode ​ SE51：屏幕操作器 ​ SE41：菜单编辑器 ABAP与Dialog交互方式 ​ ABAP程序与Dialog屏幕进行数据交换的方式，通过在程序中</description>
    </item>
    
    <item>
      <title> VOFM使用 </title>
      <link>https://coldinfire.github.io/2018/SAP_VOFM/</link>
      <pubDate>Sun, 19 Aug 2018 17:20:58 +0800</pubDate>
      
      <guid>https://coldinfire.github.io/2018/SAP_VOFM/</guid>
      <description>SAP ERP 实施中，经常会用到例程开发 (TCODE:VOFM)。这个开发目前我用到的是影响 SD 和 MM 的定价过程。创建例程需要 ACCESS KEY，这个可以通过Bas</description>
    </item>
    
    <item>
      <title> ABAP定义Range </title>
      <link>https://coldinfire.github.io/2018/ABAPRange/</link>
      <pubDate>Thu, 16 Aug 2018 17:20:58 +0800</pubDate>
      
      <guid>https://coldinfire.github.io/2018/ABAPRange/</guid>
      <description>Range使用 ​ Range Table为SAP R/3系统标准内表的一种，结构与Selection Table一致，由SIGN,OPTION,LOW,HI</description>
    </item>
    
    <item>
      <title>Smartforms</title>
      <link>https://coldinfire.github.io/2018/ABAPSmartforms/</link>
      <pubDate>Tue, 14 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2018/ABAPSmartforms/</guid>
      <description>Smartforms组成 ​ Smartforms 包括页格式 + FORM 内容，一般 form 里包含表头,表身,表尾;可以单页，也可以有多页， 调用方式是通过函数‘XXX_SSF’ 将</description>
    </item>
    
    <item>
      <title>可输入弹出框</title>
      <link>https://coldinfire.github.io/2018/ABAPUtils5/</link>
      <pubDate>Fri, 10 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2018/ABAPUtils5/</guid>
      <description>POPUP_GET_VALUES_USER_HELP 输入表格，SVAL相应的字段信息决定显示的效果： tabname = &#39;AFKO&#39;. fieldname = &#39;AUFNR&#39;. fieldtext = &#39;生产订单号&#39;. field_attr = &#39;02&#39;. //是否可输入和显示 value = &#39;val&#39;. CALL FUNCTION &#39;POPUP_GET_VALUES_USER_HELP&#39; EXPORTING * F1_FORMNAME = &#39; &#39; * F1_PROGRAMNAME = &#39;</description>
    </item>
    
    <item>
      <title>工具合计</title>
      <link>https://coldinfire.github.io/2018/ABAPUtils1/</link>
      <pubDate>Thu, 09 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2018/ABAPUtils1/</guid>
      <description>判断是否包含特定值 IF field CN &amp;lsquo;0123456789&amp;rsquo;. IF field CN &amp;lsquo;ABCDEFG*&amp;rsquo; IF field CN &amp;lsquo;abcdefg*&amp;rsquo; IF field CN &amp;lsquo;/&amp;rsquo; &amp;hellip;.. CN：Contains Not Only (包含，不仅包含) CO：Contains Only（仅包含） CS</description>
    </item>
    
    <item>
      <title>报表开发&lt;OO ALV工具&gt;</title>
      <link>https://coldinfire.github.io/2018/ABAPTable8/</link>
      <pubDate>Sat, 28 Jul 2018 17:20:58 +0800</pubDate>
      
      <guid>https://coldinfire.github.io/2018/ABAPTable8/</guid>
      <description>显示后，修改字段目录和布局 ​ 通过方法在第一次显示之后，设置一个新的布局或则字段目录。 方法 字段目录：GET_FRONTEND_FIELDCAT</description>
    </item>
    
    <item>
      <title>OO语法</title>
      <link>https://coldinfire.github.io/2018/ABAPTable7/</link>
      <pubDate>Fri, 27 Jul 2018 17:20:58 +0800</pubDate>
      
      <guid>https://coldinfire.github.io/2018/ABAPTable7/</guid>
      <description>类声明和实现 *Class Declarations CLASS application DEFINITION. PUBLIC SECTION. METHODS: show_text. PRIVATE SECTION. DATA text(100) TYPE c VALUE &#39;This is my first ABAP Object.&#39;. ENDCLASS. *Class Implementation CLASS application IMPLEMENTATION. METHOD show_text. WRITE text. ENDMETHOD. ENDCLASS. PUBLIC SECTION：可被所有对象使用 PROTECTED SECTION：只能被类</description>
    </item>
    
    <item>
      <title>报表开发&lt;OO ALV&gt;</title>
      <link>https://coldinfire.github.io/2018/ABAPTable6/</link>
      <pubDate>Wed, 25 Jul 2018 17:20:58 +0800</pubDate>
      
      <guid>https://coldinfire.github.io/2018/ABAPTable6/</guid>
      <description>OO ALV ​ ALV GRID CONTROL 使用了控制器技术以实现屏幕显示，和所有的控制器一样，ALV GRID CONTROL 通过系统中的一个全局的类提供了方法，以响应它的动作. ​ 使用了 ABAP 的对</description>
    </item>
    
    <item>
      <title>报表开发&lt;常用工具&gt;</title>
      <link>https://coldinfire.github.io/2018/ABAPTable5/</link>
      <pubDate>Tue, 03 Jul 2018 17:20:58 +0800</pubDate>
      
      <guid>https://coldinfire.github.io/2018/ABAPTable5/</guid>
      <description>单元格中的数据被修改后，将ALV单元格中的数据立即刷新到ABAP对应的内表中 方法一：通过对REUSE_ALV_GRID_DISPLAY函数参</description>
    </item>
    
    <item>
      <title>报表开发&lt;ALV显示设置&gt;</title>
      <link>https://coldinfire.github.io/2018/ABAPTable4/</link>
      <pubDate>Thu, 28 Jun 2018 17:20:58 +0800</pubDate>
      
      <guid>https://coldinfire.github.io/2018/ABAPTable4/</guid>
      <description>ALV常使用的BAPI 在ALV开发中有两个重要的对象：LAYOUT和FIELDCAT,它们同属于类型池SLIS。 LAYOUT主要用于设置AL</description>
    </item>
    
    <item>
      <title> ALV Tree标准Demo </title>
      <link>https://coldinfire.github.io/2018/ABAPUtils13/</link>
      <pubDate>Sun, 24 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2018/ABAPUtils13/</guid>
      <description>Demo列表 BCALV_TREE_01 ALV 树控制：构建层次树 BCALV_TREE_02 ALV 树控制：事件处理 BCALV_TREE_03 ALV 树控制：使用自己的上下文菜单 BCALV_TREE_04 ALV 树控制：添加按钮到工具栏 BCALV_TREE_05 ALV 树控制：添加菜单到工具</description>
    </item>
    
    <item>
      <title>报表开发&lt;内表操作&gt;</title>
      <link>https://coldinfire.github.io/2018/ABAPTable3/</link>
      <pubDate>Sat, 23 Jun 2018 17:20:58 +0800</pubDate>
      
      <guid>https://coldinfire.github.io/2018/ABAPTable3/</guid>
      <description>内表操作 SQL 语句的执行顺序 书写顺序：SELECT [DISTINCT]&amp;ndash;&amp;gt;FROM&amp;ndash;&amp;gt;WHERE&amp;ndash;&amp;gt;GROUP BY&amp;ndash;&amp;gt;HAVING&amp;ndash;&amp;gt;UNION&amp;ndash;&amp;gt;ORDER BY 其执行顺序为：FROM&amp;ndash;&amp;gt;WHERE&amp;ndash;&amp;gt;GROUP BY&amp;ndash;&amp;gt;HAVING&amp;ndash;&amp;gt;SELECT&amp;ndash;&amp;gt;DISTINCT&amp;ndash;&amp;gt;UNION-&amp;gt;ORDER</description>
    </item>
    
    <item>
      <title> ABAP通过字段找表程序 </title>
      <link>https://coldinfire.github.io/2018/ABAPUtils12/</link>
      <pubDate>Wed, 20 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2018/ABAPUtils12/</guid>
      <description>获取数据保存在哪个表 前台对指定栏位 使用 F1 帮助找表 ST05 跟踪业务操作过程，检索需要的数据表.（此方法找表很高效） 对于文本字段找表，可以找到前台维护</description>
    </item>
    
    <item>
      <title>报表开发&lt;屏幕设置&gt;</title>
      <link>https://coldinfire.github.io/2018/ABAPTable2/</link>
      <pubDate>Tue, 19 Jun 2018 17:20:58 +0800</pubDate>
      
      <guid>https://coldinfire.github.io/2018/ABAPTable2/</guid>
      <description>选择屏幕 引用链接 触发 ​ 选择屏幕触发的是：AT SELECTION-SCREEN ​ 对话屏幕触发的是：PAI ​ 列表屏幕触发的是：AT USER-COMMAND SELECT-SCREEN SELECT-SCREEN语句用于创建屏</description>
    </item>
    
    <item>
      <title> SM30表维护 </title>
      <link>https://coldinfire.github.io/2018/ABAPUtils8/</link>
      <pubDate>Mon, 18 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2018/ABAPUtils8/</guid>
      <description>表维护创建 创建自定义表 需要设置为 Display/Maintenance Allowed.允许修改，才可以在SM30中进行数据维护。否则会产生以下异常： 创建表维护 权限组：控制访问权</description>
    </item>
    
    <item>
      <title> SAP流水号 </title>
      <link>https://coldinfire.github.io/2018/ABAPUtils7/</link>
      <pubDate>Sun, 17 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2018/ABAPUtils7/</guid>
      <description>TCode SNRO OYSM 读取函数 NUMBER_GET_NEXT 相关表 NRIV TNRO 函数组 SNR0 Online maint. of number ranges &amp;amp; groups SNR1 Interface for number ranges and groups SNR2 Maintenance of number range objects SNR3 Number range checks, assignment &amp;amp; info SNR4 Number ranges utility 使用 如有跳号现象，可以禁用对象的 Buffer 试试 5NZ</description>
    </item>
    
    <item>
      <title>业务流程</title>
      <link>https://coldinfire.github.io/2018/ABAPSumory/</link>
      <pubDate>Sun, 17 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2018/ABAPSumory/</guid>
      <description>PP流程 MM01(Material)-&amp;gt;CS01(BOM)-&amp;gt;CR01(WORKCENTERY)-&amp;gt;CA01(ROUTING)-&amp;gt;MD11(PLANNED ORDER)-&amp;gt; COO1(PRODUCTION ORDERS)也可通过CO41/CO40转换计划单得来. COMAC:对生产订单进行可用性检查 COHVOMPRINT:打印订单 M</description>
    </item>
    
    <item>
      <title> ABAP学习网站记录 </title>
      <link>https://coldinfire.github.io/2018/ABAPWebSite/</link>
      <pubDate>Sat, 16 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2018/ABAPWebSite/</guid>
      <description>http://www.saptechnical.com/index.htm：需要检索关键信息 https://sapcodes.com/：包含</description>
    </item>
    
    <item>
      <title> ABAP截取字符串长度 </title>
      <link>https://coldinfire.github.io/2018/ABAPUtils6/</link>
      <pubDate>Sat, 16 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2018/ABAPUtils6/</guid>
      <description>截取包含中文字符串 strlen()只能计算包含英文字符串的长度，不能计算中文字符串的长度。 可以通过cl_abap_list_utilitie</description>
    </item>
    
    <item>
      <title>报表开发&lt;概述&gt;</title>
      <link>https://coldinfire.github.io/2018/ABAPTable1/</link>
      <pubDate>Fri, 15 Jun 2018 17:20:58 +0800</pubDate>
      
      <guid>https://coldinfire.github.io/2018/ABAPTable1/</guid>
      <description>执行程序的使用范围，报表事件 LOAD-OF-PROGRAM. INITIALIZATION. （Before display the selection screen） AT-SELECTION SCREEN ON fiedl.（在PAI事件结束后执行，进行校验和检查输入值） AT SELECTION-SCREEN ON VALUE-REQUEST</description>
    </item>
    
    <item>
      <title>红绿灯</title>
      <link>https://coldinfire.github.io/2018/ABAPUtils4/</link>
      <pubDate>Thu, 14 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2018/ABAPUtils4/</guid>
      <description>定义 TYPE-POOLS:icon,sym,slis,col. DATA: l_alv_filed TYPE slis_fieldcat_alv, l_alv_filedcat TYPE slis_t_fieldcat_alv. TYPES:BEGIN OF str_alv, id TYPE char25, xxx TYPE xxx, xxx TYPE xxx, xxx TYPE xxx, xxx TYPE string, END OF str_alv. DATA:it_alv TYPE STANDARD TABLE OF str_alv WITH HEADER LINE. CONSTANTS: c_green TYPE icon-id VALUE &#39;@08@&#39;, c_yellow TYPE icon-id VALUE &#39;@09@&#39;, c_red TYPE icon-id VALUE &#39;@0A@&#39;. 赋值 IF it_return-type = &#39;E&#39;. it_alv-id = c_red. CALL FUNCTION &#39;BAPI_TRANSACTION_ROLLBACK&#39;. ELSE. it_alv-id</description>
    </item>
    
    <item>
      <title>小数后面去除后缀0</title>
      <link>https://coldinfire.github.io/2018/ABAPUtils2/</link>
      <pubDate>Wed, 13 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2018/ABAPUtils2/</guid>
      <description>小数后面去除后缀0 form DATA_DELETE_ZERO using p_field z_result. DATA:var1 TYPE p DECIMALS 3, var2 TYPE p DECIMALS 2, var3 TYPE p DECIMALS 1, var4 TYPE i. move p_field to var1. move p_field to var2. move p_field to var3. move p_field to var4. IF var2 = var1. IF var3 = var1. IF var4 = var1. z_result = var4. ELSE. z_result = var3. ENDIF. ELSE. z_result</description>
    </item>
    
    <item>
      <title>负号前置</title>
      <link>https://coldinfire.github.io/2018/ABAPUtils3/</link>
      <pubDate>Wed, 13 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2018/ABAPUtils3/</guid>
      <description>负号前置 定义函数：CONVERSION_EXIT_Z001_OUTPUT. FUNCTION conversion_exit_z001_output. *&amp;quot;---------------------------------------------------------------------- *&amp;quot;*&amp;quot;本地接口： *&amp;quot; IMPORTING *&amp;quot; REFERENCE(INPUT) *&amp;quot; EXPORTING *&amp;quot; REFERENCE(OUTPUT) *&amp;quot;---------------------------------------------------------------------- *作</description>
    </item>
    
    <item>
      <title>添加修改人信息</title>
      <link>https://coldinfire.github.io/2018/ABAPUtils/</link>
      <pubDate>Mon, 11 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2018/ABAPUtils/</guid>
      <description>添加修改人信息 可以根据TCode进行相应的判断： 创建人信息: l_wa_head-ernam = sy-uname. l_wa_head-erdat = sy-datum. l_wa_head-erzet = sy-uzeit. call function &#39;TERMINAL_ID_GET&#39; exporting username = sy-uname importing terminal = l_wa_head-eterminal exceptions multiple_terminal_id = 1 no_terminal_found = 2 others = 3. 修改人信息： l_wa_head-urnam = sy-uname. l_wa_head-urdat</description>
    </item>
    
    <item>
      <title>ABAP程序间调用</title>
      <link>https://coldinfire.github.io/2018/ABAP6/</link>
      <pubDate>Tue, 05 Jun 2018 17:20:58 +0800</pubDate>
      
      <guid>https://coldinfire.github.io/2018/ABAP6/</guid>
      <description>同步调用 在一个程序中调用其他ABAP程序。有两种方式 中断执行 调用程序被打断，当被调用程序执行完毕之后，调用程序继续执行。 CALL FUNCTION [function] SUBMIT [program] AND RETURN CALL TRANSACTION [TCode]</description>
    </item>
    
    <item>
      <title>ABAP 语法详解(优化)</title>
      <link>https://coldinfire.github.io/2018/ABAP5/</link>
      <pubDate>Fri, 01 Jun 2018 17:20:58 +0800</pubDate>
      
      <guid>https://coldinfire.github.io/2018/ABAP5/</guid>
      <description>效率优化 数据库 不要使用 SELECT * &amp;hellip;，选择需要的字段, SELECT * 既浪费CPU，还需占用大量的ABAP内存 不要使用SELECT DISTINCT .，会绕过缓存</description>
    </item>
    
    <item>
      <title>ABAP 语法详解(SQL)</title>
      <link>https://coldinfire.github.io/2018/ABAP4/</link>
      <pubDate>Thu, 24 May 2018 17:20:58 +0800</pubDate>
      
      <guid>https://coldinfire.github.io/2018/ABAP4/</guid>
      <description>MESSAGES SE91定义: 设置消息类，保存该Function的多条消息定义，通过‘&amp;amp;’定义多个占位符。 MESSAGE E001(ZTEST). ​ E:消息显示类型 (E[Error]</description>
    </item>
    
    <item>
      <title>ABAP 语法详解(Field&amp;Form)</title>
      <link>https://coldinfire.github.io/2018/ABAP3/</link>
      <pubDate>Sun, 20 May 2018 17:20:58 +0800</pubDate>
      
      <guid>https://coldinfire.github.io/2018/ABAP3/</guid>
      <description>字符串处理 合并字符串： CONCATENATE var1 var2 INTO result [SEPARATED BY sep] [RESPECTING BLANKS]. ​ C,D,N,T类型的前导空格会保留，尾部空格会去掉，对String类型的所有空格都会保留； ​ se</description>
    </item>
    
    <item>
      <title>ABAP 语法详解(内表)</title>
      <link>https://coldinfire.github.io/2018/ABAP2/</link>
      <pubDate>Wed, 16 May 2018 17:20:58 +0800</pubDate>
      
      <guid>https://coldinfire.github.io/2018/ABAP2/</guid>
      <description>内表定义和使用 内表定义 工作区域：工作区域可以存放多个变量数据。 ​ 直接定义：DATA: BEGIN OF &amp;lt;str&amp;gt; END OF &amp;lt;str&amp;gt;. ​ 参照DB或则结构：DATA &amp;lt;wa&amp;gt; TYPE &amp;lt;dbtab&amp;gt;|&amp;lt;str&amp;gt;. ​ 参照内表</description>
    </item>
    
    <item>
      <title>ABAP 语法详解(数据类型)</title>
      <link>https://coldinfire.github.io/2018/ABAP1/</link>
      <pubDate>Sat, 12 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2018/ABAP1/</guid>
      <description>ABAP基本数据类型 基本数据类型 C : Character text D : Date(YYYYMMDD) P : Packed(包类型:1-16) N : Numeric text(不能进行计算) T : Time(HHMMSS) X : 十六进制 I : Interger F :</description>
    </item>
    
    <item>
      <title> 使用Hugo&#43;GitHub Pages快速搭建博客  </title>
      <link>https://coldinfire.github.io/2018/hugo1/</link>
      <pubDate>Mon, 12 Mar 2018 17:20:58 +0800</pubDate>
      
      <guid>https://coldinfire.github.io/2018/hugo1/</guid>
      <description>工具准备 Hugo：博客框架 https://github.com/gohugoio/hugo Git：用来发布博客内容 https://git-scm.com/ Github：保存和显示博客内容 https://github.com/ MarkDown编辑软件：用来进行博客文章的编辑 Typora C</description>
    </item>
    
    <item>
      <title>Git学习与总结</title>
      <link>https://coldinfire.github.io/2018/git/</link>
      <pubDate>Sun, 11 Mar 2018 17:20:58 +0800</pubDate>
      
      <guid>https://coldinfire.github.io/2018/git/</guid>
      <description>Git本地结构 ​ Workspace：工作区，实际操作的目录。 ​ Index / Stage：暂存区，数据暂时存放的区域，可在工作区和版本库之间进行数据的友</description>
    </item>
    
    <item>
      <title> Linux软件包管理 </title>
      <link>https://coldinfire.github.io/2017/LinuxYum/</link>
      <pubDate>Fri, 27 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2017/LinuxYum/</guid>
      <description>安装包分类 源码包 源码包：即程序软件的源代码（将软件的源码以 tar 打包后再压缩的资源包）。 RPM 最大的特点就是需要安装的软件已经编译过，并已经打包成 RPM</description>
    </item>
    
    <item>
      <title> Linux链接和网络管理 </title>
      <link>https://coldinfire.github.io/2017/LinuxLn/</link>
      <pubDate>Tue, 24 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2017/LinuxLn/</guid>
      <description>软链接 创建：ln -s 源路径 目标路径 特点：删除链接文件，源文件无影响；删除源文件，链接文件失效；修改其中一个文件，两个内容都改变；可以跨分区 指向</description>
    </item>
    
    <item>
      <title> Shell 脚本-流程控制</title>
      <link>https://coldinfire.github.io/2017/LinuxShellFlow/</link>
      <pubDate>Mon, 23 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2017/LinuxShellFlow/</guid>
      <description>退出状态 命令（包括我们编写的脚本和 shell 函数）在终止时向系统发出一个值，称为退出状态。该值是 0 到 255 范围内的整数，表示命令执行成功或失败。按照惯例</description>
    </item>
    
    <item>
      <title> Shell 脚本</title>
      <link>https://coldinfire.github.io/2017/LinuxShell/</link>
      <pubDate>Sun, 22 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2017/LinuxShell/</guid>
      <description>什么是Shell脚本 简单来说，shell 脚本是包含一系列命令的文件。shell 读取此文件并执行命令，就像它们已直接在命令行上输入一样。she</description>
    </item>
    
    <item>
      <title> Linux Vim使用 </title>
      <link>https://coldinfire.github.io/2017/LinuxVim/</link>
      <pubDate>Wed, 18 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2017/LinuxVim/</guid>
      <description>文件编辑：Vim 1) 命令行模式command mode） 控制屏幕光标的移动，字符、字或行的删除，移动复制某区段及进入Insert mode下，或者</description>
    </item>
    
    <item>
      <title> Linux 权限管理 </title>
      <link>https://coldinfire.github.io/2017/LinuxAuth/</link>
      <pubDate>Wed, 18 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2017/LinuxAuth/</guid>
      <description>用户权限 增删改查用户 增 ： useradd username：创建用户 passwd username：设置用户密码 -u：指定用户的UID -g：修改用户GID -d：修改用户</description>
    </item>
    
    <item>
      <title> Linux文件操作 </title>
      <link>https://coldinfire.github.io/2017/LinuxFile/</link>
      <pubDate>Tue, 17 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2017/LinuxFile/</guid>
      <description>文件 ex: -rw--w-r-- 1 user group day month time text.xx 第一个文件代表意义(0)： [d]:目录 [-]:文件 [l]:链接文档 [b]:可随机存储装置 [c]:串行端口设备 后续文字意</description>
    </item>
    
    <item>
      <title> Linux基础 </title>
      <link>https://coldinfire.github.io/2017/Linux/</link>
      <pubDate>Mon, 16 Oct 2017 17:20:58 +0800</pubDate>
      
      <guid>https://coldinfire.github.io/2017/Linux/</guid>
      <description>主要内容 Linux目录组成结构及文件的增删改查，用户，权限管理 Linux软件包管理、磁盘管理 Linux网络基础 Linux状态监控命令 Linu</description>
    </item>
    
    <item>
      <title> HTTP解析 </title>
      <link>https://coldinfire.github.io/2017/HTTP/</link>
      <pubDate>Thu, 12 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2017/HTTP/</guid>
      <description>引言 ​ HTTP是一个属于应用层的面向对象的协议，由于其简捷、快速的方式，适用于分布式超媒体信息系统。它于1990年提出，经过几年的使用与发展</description>
    </item>
    
    <item>
      <title>JavaScript学习与总结</title>
      <link>https://coldinfire.github.io/2017/JS/</link>
      <pubDate>Thu, 14 Sep 2017 17:20:58 +0800</pubDate>
      
      <guid>https://coldinfire.github.io/2017/JS/</guid>
      <description></description>
    </item>
    
    <item>
      <title>CSS背景设置</title>
      <link>https://coldinfire.github.io/2017/CSSBackgroup/</link>
      <pubDate>Wed, 13 Sep 2017 17:20:58 +0800</pubDate>
      
      <guid>https://coldinfire.github.io/2017/CSSBackgroup/</guid>
      <description>属性介绍 网页的背景设计： background-color 颜色设置方式 Color name：red，green&amp;hellip; HEX Value：#rrggbb RGB Value：rgb(255</description>
    </item>
    
    <item>
      <title>CSS格式与标准总结</title>
      <link>https://coldinfire.github.io/2017/CSS/</link>
      <pubDate>Tue, 12 Sep 2017 17:20:58 +0800</pubDate>
      
      <guid>https://coldinfire.github.io/2017/CSS/</guid>
      <description>CSS语法 使用双空格短缩进——只有这样才能保证代码能在所有渲染器中显示一致； 当成组使用选择器时，每个选择器单独一行； 一条声明的开大括号前留一</description>
    </item>
    
    <item>
      <title>供应商(Vendor)</title>
      <link>https://coldinfire.github.io/1/MMVender/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/1/MMVender/</guid>
      <description>供应商主数据 供应商主数据的维护：采购和会计数据可以集中或分散维护 供应商主数据：采购业务，缺少不能创建采购凭证或则发票校验等 一般数据：地址、通</description>
    </item>
    
  </channel>
</rss>