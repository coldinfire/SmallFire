<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>工具 on Small Fire`s Blog</title>
    <link>https://coldinfire.github.io/categories/%E5%B7%A5%E5%85%B7/</link>
    <description>Recent content in 工具 on Small Fire`s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 23 Apr 2018 00:00:00 +0000</lastBuildDate><atom:link href="https://coldinfire.github.io/categories/%E5%B7%A5%E5%85%B7/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title> Hugo添加搜索功能(Algolia)  </title>
      <link>https://coldinfire.github.io/2018/hugo2/</link>
      <pubDate>Mon, 23 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2018/hugo2/</guid>
      <description>Algolia：博客框架 https://www.algolia.com/ Algolia配置 ​ ​ 记录API Keys相关信息： Application ID Search-Only API Key Admin API Key Hugo设置 在配置文件config中添加一下内容</description>
    </item>
    
    <item>
      <title> 使用Hugo&#43;GitHub Pages快速搭建博客  </title>
      <link>https://coldinfire.github.io/2018/hugo1/</link>
      <pubDate>Tue, 10 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2018/hugo1/</guid>
      <description>工具准备 Hugo：博客框架 https://github.com/gohugoio/hugo Git：用来发布博客内容 https://git-scm.com/ Github：保存和显示博客内容 https://github.com/ MarkDown编辑软件：用来进行博客文章的编辑 Typora C</description>
    </item>
    
    <item>
      <title>Git学习与总结</title>
      <link>https://coldinfire.github.io/2018/Git/</link>
      <pubDate>Mon, 02 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2018/Git/</guid>
      <description>Git本地结构 Workspace： 工作区，实际操作的目录。 Index / Stage： 暂存区，数据暂时存放的区域，可在工作区和版本库之间进行数据的友好交</description>
    </item>
    
    <item>
      <title>Maven依赖管理</title>
      <link>https://coldinfire.github.io/2018/WEB_Maven_Dependency/</link>
      <pubDate>Mon, 12 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2018/WEB_Maven_Dependency/</guid>
      <description>依赖管理 依赖范围 Maven在编译主代码的时候需要使用一套 classpath，在编译和执行测试的时候会使用另一套 classpath，实际运行项</description>
    </item>
    
    <item>
      <title>Maven构建生命周期</title>
      <link>https://coldinfire.github.io/2018/WEB_Maven_LifeCycle/</link>
      <pubDate>Thu, 08 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2018/WEB_Maven_LifeCycle/</guid>
      <description>项目生命周期 Maven有三套相互独立的生命周期，分别是：clean、default、site。 clean：清理项目 default：构件项目，</description>
    </item>
    
    <item>
      <title>Maven-POM标签大全详解</title>
      <link>https://coldinfire.github.io/2018/WEB_Maven_POM/</link>
      <pubDate>Mon, 05 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2018/WEB_Maven_POM/</guid>
      <description>引用链接：菜鸟教程 POM 基本配置 &amp;lt;project &amp;gt; ：文件的根节点 . &amp;lt;modelversion &amp;gt; ： pom.xml使用的对象模型版本 &amp;lt;groupId &amp;gt; ：项目名称，一般写项目的域名 &amp;lt;artifactId &amp;gt; ：模块名称，子项目</description>
    </item>
    
    <item>
      <title>Maven使用</title>
      <link>https://coldinfire.github.io/2018/WEB_Maven/</link>
      <pubDate>Thu, 01 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2018/WEB_Maven/</guid>
      <description>Maven简介 什么是Maven Maven 是 apache 下的开源项目，项目管理工具，管理java项目。 Maven是一个项目管理工具，它包含了一个项目对象模型 (P</description>
    </item>
    
  </channel>
</rss>
