<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ABAP on Small Fire`s Blog</title>
    <link>https://coldinfire.github.io/categories/ABAP/</link>
    <description>Recent content in ABAP on Small Fire`s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sat, 21 Dec 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://coldinfire.github.io/categories/ABAP/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>ABAP BTE增强使用</title>
      <link>https://coldinfire.github.io/2019/ABAP_BTE/</link>
      <pubDate>Sat, 21 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2019/ABAP_BTE/</guid>
      <description>BTE概念 ​ BTE(Business Transaction Events)：BTE是SAP中可用的增强技术之一，通常使用在财务会计模块, 可由 SAP，第三方供应商（合作伙伴）和客户使用。</description>
    </item>
    
    <item>
      <title> CS12 ALV的增强 </title>
      <link>https://coldinfire.github.io/2019/BOM_Enhance/</link>
      <pubDate>Tue, 19 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2019/BOM_Enhance/</guid>
      <description>Tcode：CS12的执行程序查看 可以看到，最终执行的程序是RCS12001，因此可以在该程序中查找增强。 执行的程序： RCS11001 Display BOM Level by Level RCS12001 Display Multilevel BOM RCS13001</description>
    </item>
    
    <item>
      <title>SAP JCO连接</title>
      <link>https://coldinfire.github.io/2019/SAP_JCO/</link>
      <pubDate>Wed, 13 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2019/SAP_JCO/</guid>
      <description>SAP JCO简介 ​ 为了在R/3系统和JAVA平台之间进行实时的交换数据。SAP提供了一套高效的基于RFC的ABAP和JAVA进程间通讯组件：SA</description>
    </item>
    
    <item>
      <title>ABAP 科学计数法问题</title>
      <link>https://coldinfire.github.io/2019/ABAP_NumberQAS/</link>
      <pubDate>Sun, 20 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2019/ABAP_NumberQAS/</guid>
      <description>科学计数法转换数字 ​ ABAP 函数 QSS0_FLTP_TO_CHAR_CONVERSION，能将 SAP 系统内的科学计数法显示的数字转换成一般数字。 DATA: l_result TYPE</description>
    </item>
    
    <item>
      <title>SO10创建标准文本</title>
      <link>https://coldinfire.github.io/2019/ABAP_SO10/</link>
      <pubDate>Fri, 18 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2019/ABAP_SO10/</guid>
      <description>通过 Tcode SO10 可以创建标准文本： ​ ​ 通过占位符替换长文本： ​ DATA lv_name TYPE thead-tdname. DATA lv_langu LIKE sy-langu VALUE &#39;EN&#39;. DATA lt_line TYPE STANDARD TABLE OF tline WITH HEADER LINE. DATA lv_count TYPE i. lv_name = &#39;Z_TEST&#39;. &amp;quot;read text from SO10 CALL FUNCTION &#39;READ_TEXT&#39; EXPORTING client = sy-mandt id = &#39;ST&#39; language =</description>
    </item>
    
    <item>
      <title>IDoc操作</title>
      <link>https://coldinfire.github.io/2019/ABAP_IDoc/</link>
      <pubDate>Sun, 22 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2019/ABAP_IDoc/</guid>
      <description>参考链接 IDoc 1.IDoc简介 IDoc:是基于文档，用作异步传输数据的载体，类似于XML;使用功能场景：假设 1040 和 1020 是同一个集团下两个不同子公司的</description>
    </item>
    
    <item>
      <title>ABAP字符串处理</title>
      <link>https://coldinfire.github.io/2019/ABAP_String/</link>
      <pubDate>Wed, 18 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2019/ABAP_String/</guid>
      <description>​ 字符串的处理在程序中的使用十分常见，在这里结合自己日常的使用对ABAP的字符串常用操作进行总结，以便后续使用。 1.获取字符串长度 var1 = str</description>
    </item>
    
    <item>
      <title>SQVI-创建一张简易的报表</title>
      <link>https://coldinfire.github.io/2019/SAP_SQVI/</link>
      <pubDate>Wed, 28 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2019/SAP_SQVI/</guid>
      <description>SAP提供的SQVI功能，用以快速自定义一个自己需要的报表。 创建，并选择数据源为：表连接，然后插入需要查数的表，接着将表的主键进行连接 完成所</description>
    </item>
    
    <item>
      <title>生产订单标准BAPI</title>
      <link>https://coldinfire.github.io/2019/SAP_PO_BAPI/</link>
      <pubDate>Wed, 28 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2019/SAP_PO_BAPI/</guid>
      <description>创建PO *&amp;amp;---------------------------------------------------------------------* *&amp;amp; Form FRM_ORDER_CREATE *&amp;amp;---------------------------------------------------------------------* *----------------------------------------------------------------------* &amp;quot;--&amp;gt; p1 text &amp;quot;&amp;lt;-- p2 text *----------------------------------------------------------------------* FORM frm_order_create . DATA: ls_upload LIKE LINE OF gt_upload, ls_style TYPE lvc_s_styl, lv_index LIKE sy-tabix. DATA: ls_order TYPE bapi_pp_order_create, ls_return TYPE bapiret2, lv_ordnum TYPE bapi_order_key-order_number, lv_ordtyp TYPE bapi_order_copy-order_type. LOOP AT gt_upload INTO ls_upload WHERE ztype EQ space AND box EQ &#39;X&#39;. lv_index = sy-tabix. CLEAR: ls_order, ls_return, lv_ordnum, lv_ordtyp, ls_style. IF ls_upload-externind EQ</description>
    </item>
    
    <item>
      <title>获取工单的Work Center</title>
      <link>https://coldinfire.github.io/2019/SAP_WorkCenter/</link>
      <pubDate>Wed, 28 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2019/SAP_WorkCenter/</guid>
      <description></description>
    </item>
    
    <item>
      <title>SAP Product Order status</title>
      <link>https://coldinfire.github.io/2019/SAP_PO/</link>
      <pubDate>Sun, 25 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2019/SAP_PO/</guid>
      <description>SAP生产订单状态 SAP 系统的常见订单状态如下： CRTD (创建)：标识生产订单刚刚创建，此时禁止做后续发料和报工确认等操作； PREL (部分下达)：当生产订单</description>
    </item>
    
    <item>
      <title>ABAP混合算术运算</title>
      <link>https://coldinfire.github.io/2019/ABAP_MixedCalculate/</link>
      <pubDate>Mon, 12 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2019/ABAP_MixedCalculate/</guid>
      <description>使用 ​ 在ABAP程序中将数值与表达式分别存放，通过表达式计算对应的结果。 一、调用BAPI：EVAL_FORMULA TYPES:BEGIN OF TY_VAL, OPERAND TYPE C, VALUE TYPE STRING, END OF TY_VAL. TYPES:BEGIN</description>
    </item>
    
    <item>
      <title>递归遍历成本中心组</title>
      <link>https://coldinfire.github.io/2019/ABAP_RecursiveCostCenter/</link>
      <pubDate>Thu, 01 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2019/ABAP_RecursiveCostCenter/</guid>
      <description>成本中心组下嵌套成本中心组 ​ 成本中心后台数据表是 CSKS，描述表是 CSKT。在表 CSKS 中，主键是 MANDT（客户端）、KOKRS（控制范围）、K</description>
    </item>
    
    <item>
      <title> ALV Tree标准Demo </title>
      <link>https://coldinfire.github.io/2019/ABAP_ALVTree/</link>
      <pubDate>Mon, 24 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2019/ABAP_ALVTree/</guid>
      <description>Demo列表 BCALV_TREE_01 ALV 树控制：构建层次树 BCALV_TREE_02 ALV 树控制：事件处理 BCALV_TREE_03 ALV 树控制：使用自己的上下文菜单 BCALV_TREE_04 ALV 树控制：添加按钮到工具栏 BCALV_TREE_05 ALV 树控制：添加菜单到工具</description>
    </item>
    
    <item>
      <title>BAPI使用</title>
      <link>https://coldinfire.github.io/2019/BAPI/</link>
      <pubDate>Sun, 16 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2019/BAPI/</guid>
      <description>BAPI：Business Application Process Interface(业务应用编辑接口)，它实质上就是一种特殊的RFC函数。 BAPI函数及函数参数参考的结构类型</description>
    </item>
    
    <item>
      <title> 发送带文本的Email </title>
      <link>https://coldinfire.github.io/2019/ABAP_EmailText/</link>
      <pubDate>Wed, 22 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2019/ABAP_EmailText/</guid>
      <description>程序：转自 http://blog.chinaunix.net/uid-20591812-id-1918813.html *&amp;amp;---------------------------------------------------------------------* *&amp;amp; Report Z14841_TEST010 *&amp;amp;---------------------------------------------------------------------* REPORT z14841_test010. TYPES: BEGIN OF stru_master, kunnr TYPE kunnr, &amp;quot; 客户编号 1 bukrs TYPE bukrs, &amp;quot; 公司代码 pro_mill TYPE werks_d, &amp;quot; 工厂 *quota TYPE zcdfquota, &amp;quot; 额度 *account TYPE char10, &amp;quot; 帐期 *zdays TYPE zcdfdays, &amp;quot; 天数 *valid_beg TYPE zcdfdatum1, &amp;quot; 有效起始日期 *valid_end TYPE</description>
    </item>
    
    <item>
      <title> 发送带附件(Excel)的Email </title>
      <link>https://coldinfire.github.io/2019/ABAP_EmailExcel/</link>
      <pubDate>Sat, 18 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2019/ABAP_EmailExcel/</guid>
      <description>程序：转自 http://blog.chinaunix.net/uid-20591812-id-1918813.html *&amp;amp;---------------------------------------------------------------------* *&amp;amp; Report Z7258_MAIL_EXCEL * *&amp;amp; * *&amp;amp;---------------------------------------------------------------------* *&amp;amp; Example of sending external email via SAPCONNECT * *&amp;amp; * *&amp;amp;---------------------------------------------------------------------* REPORT z7258_mail_excel . TABLES: ekko. PARAMETERS: p_email TYPE somlreci1-receiverDEFAULT &#39;jszjghw@163.com&#39;. TYPES: BEGIN OF t_ekpo, ebeln TYPE ekpo-ebeln, ebelp TYPE ekpo-ebelp, aedat TYPE ekpo-aedat, matnr TYPE ekpo-matnr, END OF t_ekpo. DATA: it_ekpo TYPE STANDARD TABLE OF t_ekpo INITIAL SIZE 0, wa_ekpo TYPE t_ekpo. TYPES: BEGIN</description>
    </item>
    
    <item>
      <title>BOM了解</title>
      <link>https://coldinfire.github.io/2019/BOM/</link>
      <pubDate>Thu, 25 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2019/BOM/</guid>
      <description>BOM定义 ​ BOM:物料清单，是部件完整、正式的结构化清单，组成一个产品或装配。包括每个部件的项目号、损耗、数量和计量单位。</description>
    </item>
    
    <item>
      <title>Work Center 了解</title>
      <link>https://coldinfire.github.io/2019/MMWorkCenter/</link>
      <pubDate>Thu, 25 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2019/MMWorkCenter/</guid>
      <description></description>
    </item>
    
    <item>
      <title>移库产生的报错</title>
      <link>https://coldinfire.github.io/2019/SAPQ1/</link>
      <pubDate>Sun, 14 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2019/SAPQ1/</guid>
      <description>Q：当进行移库操作时，同一个程序中执行多次移库动作会产生Error Message:No status object is available for HU XXXXXX(Error BS001 when posting goods movment)? A：需要每次进行移库前刷新数据： &amp;ldquo;调</description>
    </item>
    
    <item>
      <title> SAP下载程序源码工具 </title>
      <link>https://coldinfire.github.io/2019/ABAP_DownloadSourceCode/</link>
      <pubDate>Wed, 10 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2019/ABAP_DownloadSourceCode/</guid>
      <description>程序：转自 http://blog.sina.com.cn/s/blog_4d1570de0100pvhd.html *@---------------------------------------------------------------------* *@ Report ZZXUE01 下载程序代码 *@ T-code *@---------------------------------------------------------------------* *@ Created by Xavery Hsueh on 2011-03-01 *@ Lasted Edited date: *@---------------------------------------------------------------------* &amp;quot;REPORT XXX NO STANDARD PAGE HEADING. ***********************************************************************@ ** 声明数据库表 ***********************************************************************@ TABLES:rs38m, trdir. &amp;quot;***********************************************************************@ &amp;quot;** 内表结构类型的定义 &amp;quot;***********************************************************************@ DATA BEGIN OF dynpfields OCCURS 1. INCLUDE STRUCTURE dynpread. DATA</description>
    </item>
    
    <item>
      <title> SAP发送邮件 </title>
      <link>https://coldinfire.github.io/2019/ABAP_SendEmail/</link>
      <pubDate>Mon, 08 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2019/ABAP_SendEmail/</guid>
      <description>TRY. &amp;quot; 创建发送请求 l_send_request = cl_bcs=&amp;gt;create_persistent( ). &amp;quot; 设定发送内容 l_document = cl_document_bcs=&amp;gt;create_document( i_type = &#39;RAW&#39; i_text = i_content[] I_IMPORTANCE = &#39;1&#39; i_subject = l_subject ). &amp;quot; 增加发送内容到发送请求 CALL METHOD l_send_request-&amp;gt;set_document( l_document ). &amp;quot; 取得发送者（取得发件人，前提是这个</description>
    </item>
    
    <item>
      <title>SAP后台JOB</title>
      <link>https://coldinfire.github.io/2019/ABAP_JOB/</link>
      <pubDate>Fri, 05 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2019/ABAP_JOB/</guid>
      <description>定义后台 job 第一种：SE38执行可执行程序 菜单栏‘program’&amp;mdash;&amp;gt;&amp;lsquo;Execute in Background&amp;rsquo; 输入输出设备 选择开始时</description>
    </item>
    
    <item>
      <title>STO详解</title>
      <link>https://coldinfire.github.io/2019/ABAPSTO/</link>
      <pubDate>Mon, 01 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2019/ABAPSTO/</guid>
      <description>一、工厂间转储 （1）MB1B 移动类型 301 工厂到工厂（一步）转账 -&amp;gt; 简单明了一步转储；过账后会产生 GR，MITA 增加了，MIZH 减少了， MB03：</description>
    </item>
    
    <item>
      <title>SAP memory使用</title>
      <link>https://coldinfire.github.io/2019/ABAP_Memory/</link>
      <pubDate>Mon, 04 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2019/ABAP_Memory/</guid>
      <description>SAP memory和ABAP memory 使用的语句不同 SAP memory使用SET/GET parameters； SPA：SET PARAMETER ID &amp;lsquo;MAT&amp;rsquo; FIELD p_matnr. GPA：GET PARAMETER ID &amp;lsquo;MAT&amp;rsquo; FIELD</description>
    </item>
    
    <item>
      <title>ABAP DOI使用</title>
      <link>https://coldinfire.github.io/2019/ABAP_DOI/</link>
      <pubDate>Fri, 22 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2019/ABAP_DOI/</guid>
      <description>概述 DOI（Desktop office Integration）采用OO的思想实现与Office的结合使用。 可以先上传模板到服务器(OAOR)，然后对模</description>
    </item>
    
    <item>
      <title>STVARV使用详情</title>
      <link>https://coldinfire.github.io/2019/ABAP_Variant/</link>
      <pubDate>Thu, 14 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2019/ABAP_Variant/</guid>
      <description>STVARV使用 ​ 该配置不能跨Client因此需要在每个Client单独配置；使用TCode：stvarv进入配置界面，可以新建、修改、删除</description>
    </item>
    
    <item>
      <title>Smartforms打印成PDF</title>
      <link>https://coldinfire.github.io/2018/ABAP_Smartfomrs_TMP/</link>
      <pubDate>Wed, 05 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2018/ABAP_Smartfomrs_TMP/</guid>
      <description>1.程序中使用Smartform模板 &amp;quot;SMARTFORMS变量定义 DATA: lv_form_name TYPE tdsfname VALUE &#39;ZZ_TEST&#39;, &amp;quot;Smartforms Name lv_fm_name type rs38l_fnam, &amp;quot;Function Name ls_control type ssfctrlop, &amp;quot;Control structure ls_option type ssfcompop, &amp;quot;Smart Composer (transfer) options ls_ssfcrescl type ssfcrescl. &amp;quot;Return value at end</description>
    </item>
    
    <item>
      <title>BOM展开</title>
      <link>https://coldinfire.github.io/2018/BOM_USE/</link>
      <pubDate>Sun, 25 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2018/BOM_USE/</guid>
      <description>SAP BOM读取逻辑 相关表 MAST：Material BOM STKO : BOM Header STPO : BOM Positions (detail) MAPL : Assignment fo Task Lists to Materials PLKO : Routing Group Header PLSO : Routing Group Sequence PLPO : Routing Group Operations AFKO : Production Order Header AFPO : Production Order Position (details) 可用</description>
    </item>
    
    <item>
      <title>ABAP 工作流</title>
      <link>https://coldinfire.github.io/2018/ABAPWorkFlow/</link>
      <pubDate>Sat, 24 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2018/ABAPWorkFlow/</guid>
      <description>SAP工作流介绍 工作流是一个基于某组程序规则所采用的路径。是自动运作的任务的进程中，参与的人、文件、信息或任务，以及各个要素间的传递按照规程</description>
    </item>
    
    <item>
      <title>Excle操作</title>
      <link>https://coldinfire.github.io/2018/ABAP_Excel/</link>
      <pubDate>Tue, 13 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2018/ABAP_Excel/</guid>
      <description>使用 BAPI 1. 内表数据下载到文件: CALL FUNCTION &#39;DOWNLOAD&#39;：提示保存 CALL FUNCTION &#39;WS_DOWNLOAD&#39;：不提示直接保存 CALL FUNCTION &#39;DOWNLOAD_WEB_</description>
    </item>
    
    <item>
      <title> WebDynpro </title>
      <link>https://coldinfire.github.io/2018/SAPWebDynpro1/</link>
      <pubDate>Wed, 24 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2018/SAPWebDynpro1/</guid>
      <description>简介</description>
    </item>
    
    <item>
      <title> ALV tree显示BOM结构 </title>
      <link>https://coldinfire.github.io/2018/BOM_Tree/</link>
      <pubDate>Tue, 23 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2018/BOM_Tree/</guid>
      <description>代码 REPORT z_barry_alv_tree1_bom MESSAGE-ID oo. TABLES: stpox. INCLUDE &amp;lt;icon&amp;gt;. CLASS: cl_gui_column_tree DEFINITION LOAD, cl_gui_cfw DEFINITION LOAD . DATA: tree1 TYPE REF TO cl_gui_alv_tree , mr_toolbar TYPE REF TO cl_gui_toolbar . DATA: gs_stpox TYPE stpox, gt_stpox TYPE stpox OCCURS 0, gt_fieldcatalog TYPE lvc_t_fcat, gt_item_layout TYPE lvc_t_laci, gs_item_layout TYPE lvc_s_laci, okcode LIKE sy-ucomm . TYPES: BEGIN OF gs_f. INCLUDE STRUCTURE stpox. TYPES: node_key TYPE lvc_nkey, END OF gs_f. DATA: gs_xstpox TYPE</description>
    </item>
    
    <item>
      <title> WebDynpro </title>
      <link>https://coldinfire.github.io/2018/SAPWebDynpro/</link>
      <pubDate>Tue, 16 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2018/SAPWebDynpro/</guid>
      <description>简介 Web Dynpro 在业务应用程序的主要结构和视觉设计部分的方式，在很大程度上是独立于实现语言. 一个Web Dynpro 组件不是一个JAVA类，而是一系列类集合所有</description>
    </item>
    
    <item>
      <title>BAPI总结列表</title>
      <link>https://coldinfire.github.io/2018/ABAP_BAPI/</link>
      <pubDate>Sun, 14 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2018/ABAP_BAPI/</guid>
      <description>本文主要记录一些收集来的BAPI,在SE38环境下的程序名输入栏输入&amp;rsquo;DEMO&amp;lsquo;后按F4，你可以查到SAP所有的DE</description>
    </item>
    
    <item>
      <title>RFC外部调用</title>
      <link>https://coldinfire.github.io/2018/ABAP_RFC/</link>
      <pubDate>Fri, 12 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2018/ABAP_RFC/</guid>
      <description>RFC 什么是 RFC ​ RFC 是 SAP 系统和其他（SAP 或非 SAP）系统间的一个重要而常用的双向接口技术，也被视为 SAP 与外部通信的基本协议。简单地说，RFC 过程就</description>
    </item>
    
    <item>
      <title>BDC屏幕录制</title>
      <link>https://coldinfire.github.io/2018/BDC/</link>
      <pubDate>Wed, 26 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2018/BDC/</guid>
      <description>定义BDC (Batch Data Communication) BDC：SAP常用的一种数据传输方法。用于一些数据量大，但对速度要求不高的数据传输. 使用步骤： 把外部的数据源(Txt,Exc</description>
    </item>
    
    <item>
      <title>SAP Authorization</title>
      <link>https://coldinfire.github.io/2018/SAPAuthorization/</link>
      <pubDate>Sat, 22 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2018/SAPAuthorization/</guid>
      <description>TCode简介 ​ SU01：查看和编辑Role ​ SU10：实现对用户组的批量维护 ​ SU20：权限字段清单，可以增、删、改权限字段，可以浏览字段</description>
    </item>
    
    <item>
      <title> 财务凭证冲销 </title>
      <link>https://coldinfire.github.io/2018/ABAP_FIVoucherReversal/</link>
      <pubDate>Thu, 20 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2018/ABAP_FIVoucherReversal/</guid>
      <description>凭证的更改 1：已经过帐的 TCODE：FB02. ​ 过完帐的允许更改的地方有限，只有凭证抬头文本，参照，分配，文本，原因代码等 2：预制凭证的更改</description>
    </item>
    
    <item>
      <title>查找增强程序3</title>
      <link>https://coldinfire.github.io/2018/ABAP_Enhance3/</link>
      <pubDate>Tue, 18 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2018/ABAP_Enhance3/</guid>
      <description>一个功能非常全面的增强出口查找工具 *&amp;amp;--------------------------------------------------------------------&amp;amp;* *&amp;amp; Report: zdamon_004 (V9) &amp;amp;* *&amp;amp; PJA Consultancy Services (www.pjas.com) &amp;amp;* *&amp;amp;--------------------------------------------------------------------&amp;amp;* *&amp;amp; This report attmpts to find Enhancements, Program-Exits, BADIs &amp;amp;* *&amp;amp; and Business Transaction Events in a particular program/tcode. &amp;amp;* *&amp;amp; Last updated: 09 May 2007 &amp;amp;* *&amp;amp;--------------------------------------------------------------------&amp;amp;* *&amp;amp; Selection Texts: *&amp;amp; P_ALV ALV format *&amp;amp; P_AUTH Include authority-check search</description>
    </item>
    
    <item>
      <title>查找增强程序2</title>
      <link>https://coldinfire.github.io/2018/ABAP_Enhance2/</link>
      <pubDate>Sun, 16 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2018/ABAP_Enhance2/</guid>
      <description>查找增强出口和BADI *&amp;amp;---------------------------------------------------------------------* *&amp;amp; Report Z_FIND_EXIT_AND_BADI *&amp;amp; *&amp;amp;---------------------------------------------------------------------* *&amp;amp; *&amp;amp; *&amp;amp;---------------------------------------------------------------------* report z_find_exit_and_badi no standard page heading. *&amp;amp;---------------------------------------------------------------------* *&amp;amp; Enter the transaction code that you want to search through in order *&amp;amp; to find which Standard SAP User Exits and BADIs *&amp;amp; *&amp;amp;---------------------------------------------------------------------* *&amp;amp; For field &#39;SUBC&#39; of table &#39;TRDIR&#39;: *&amp;amp; M Module Pool *&amp;amp; F Function group *&amp;amp; S Subroutine</description>
    </item>
    
    <item>
      <title>查找增强程序1</title>
      <link>https://coldinfire.github.io/2018/ABAP_Enhance1/</link>
      <pubDate>Fri, 14 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2018/ABAP_Enhance1/</guid>
      <description>利用t-code查找增强出口的程序工具 REPORT zdamon_005 NO STANDARD PAGE HEADING. TABLES : tstc, tadir, modsapt, modact, trdir, tfdir, enlfdir. TABLES : tstct. DATA : jtab LIKE tadir OCCURS 0 WITH HEADER LINE. DATA : field1(30). DATA : v_devclass LIKE tadir-devclass. PARAMETERS : p_tcode LIKE tstc-tcode OBLIGATORY. SELECT SINGLE * FROM tstc WHERE tcode EQ p_tcode.</description>
    </item>
    
    <item>
      <title>增强</title>
      <link>https://coldinfire.github.io/2018/ABAP_Enhance/</link>
      <pubDate>Thu, 13 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2018/ABAP_Enhance/</guid>
      <description>基本概念 User Exits：是系统中预留的一些空的Form/Subroutine，获得Access key后可以在Form中写入自己的逻辑。 用户出口</description>
    </item>
    
    <item>
      <title> Field Symbols </title>
      <link>https://coldinfire.github.io/2018/ABAP_FieldSymbol/</link>
      <pubDate>Sat, 08 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2018/ABAP_FieldSymbol/</guid>
      <description>字段符号 定义: FIELD-SYMBOLS: &amp;lt;fs&amp;gt; TYPE ANY TABLE. FIELD-SYMBOLS: &amp;lt;fs&amp;gt; LIKE LINE OF &amp;lt;t_TABLE&amp;gt; FIELD-SYMBOLS: &amp;lt;fs&amp;gt; type any. ​ FS必须和某个变量，结构或者内表绑定后才能使用，在使用FS前必须分配给某个变量，不然会发生FS</description>
    </item>
    
    <item>
      <title>复制其他的内表/结构到当前表/结构</title>
      <link>https://coldinfire.github.io/2018/ABAP_TableCopyFields/</link>
      <pubDate>Sat, 08 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2018/ABAP_TableCopyFields/</guid>
      <description>​ 有时需要创建一个结构，但是字段和其他表或则结构类似，就可以采用复制的方式快速创建，而不用一个一个字段去输入。 1.SE11选择需要添加字段的</description>
    </item>
    
    <item>
      <title>Smartforms</title>
      <link>https://coldinfire.github.io/2018/ABAP_ALV_OODemo/</link>
      <pubDate>Sun, 02 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2018/ABAP_ALV_OODemo/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Dialog程序</title>
      <link>https://coldinfire.github.io/2018/ABAP_Dialog/</link>
      <pubDate>Tue, 28 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2018/ABAP_Dialog/</guid>
      <description>TCode ​ SE51：屏幕操作器 ​ SE41：菜单编辑器 ABAP与Dialog交互方式 ​ ABAP程序与Dialog屏幕进行数据交换的方式，通过在程序中</description>
    </item>
    
    <item>
      <title> List ALV Demo </title>
      <link>https://coldinfire.github.io/2018/ABAP_ALVTemp/</link>
      <pubDate>Fri, 24 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2018/ABAP_ALVTemp/</guid>
      <description>*&amp;amp;---------------------------------------------------------------------* *&amp;amp; Report ZWR_PI_LOG *&amp;amp; *&amp;amp;---------------------------------------------------------------------* *&amp;amp; *&amp;amp; *&amp;amp;---------------------------------------------------------------------* REPORT zwr_pi_log. TABLES: lqua ,zpidoc. TYPE-POOLS: slis. DATA: lt_pidoc TYPE STANDARD TABLE OF zpidoc, ls_pidoc TYPE zpidoc . &amp;quot;ALV Data DATA: gt_fieldcat TYPE lvc_t_fcat, gs_fieldcat TYPE lvc_s_fcat, lw_layout TYPE lvc_s_layo. &amp;quot;Select screen PARAMETERS: p_lgnum TYPE lqua-lgnum OBLIGATORY. PARAMETERS: p_status TYPE zpidoc-STATUS. SELECT-OPTIONS: s_lgtyp FOR lqua-lgtyp, s_create FOR sy-datum OBLIGATORY, s_ctdate FOR sy-datum , s_pidoc FOR ZPIDOC-PIDOC, s_lgpla FOR lqua-lgpla, s_lenum FOR</description>
    </item>
    
    <item>
      <title> VOFM使用 </title>
      <link>https://coldinfire.github.io/2018/SAPVOFM/</link>
      <pubDate>Sun, 19 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2018/SAPVOFM/</guid>
      <description>SAP ERP 实施中，经常会用到例程开发 (TCODE:VOFM)。这个开发目前我用到的是影响 SD 和 MM 的定价过程。创建例程需要 ACCESS KEY，这个可以通过Bas</description>
    </item>
    
    <item>
      <title> ABAP定义Range </title>
      <link>https://coldinfire.github.io/2018/ABAP_Range/</link>
      <pubDate>Thu, 16 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2018/ABAP_Range/</guid>
      <description>Range使用 ​ Range Table为SAP R/3系统标准内表的一种，结构与Selection Table一致，由SIGN,OPTION,LOW,HI</description>
    </item>
    
    <item>
      <title>Smartforms Barcode</title>
      <link>https://coldinfire.github.io/2018/ABAP_Smartform_Barcode/</link>
      <pubDate>Tue, 14 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2018/ABAP_Smartform_Barcode/</guid>
      <description>Smartforms 打印条码 传统的：将数据发送到打印机上，由打印机将数据转换成 条码图案，然后进行打印。 ​ 在 SAP Smartforms 里实现条码打印。在客户机里安装 www.tec-it.com 里的插件 1.定义</description>
    </item>
    
    <item>
      <title>负号前置</title>
      <link>https://coldinfire.github.io/2018/ABAP_Negative_sign_front/</link>
      <pubDate>Mon, 13 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2018/ABAP_Negative_sign_front/</guid>
      <description>负号前置 SAP 系统中，很多种情况下负号都是在数字后面，如果在显示或计算数据时需要将负号放到数字前面。 调用系统BAPI 可以使用 function module：CL</description>
    </item>
    
    <item>
      <title>可输入弹出框</title>
      <link>https://coldinfire.github.io/2018/ABAP_PopUpBox/</link>
      <pubDate>Fri, 10 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2018/ABAP_PopUpBox/</guid>
      <description>POPUP_GET_VALUES_USER_HELP 输入表格，SVAL相应的字段信息决定显示的效果： tabname = &#39;AFKO&#39;. fieldname = &#39;AUFNR&#39;. fieldtext = &#39;生产订单号&#39;. field_attr = &#39;02&#39;. //是否可输入和显示 value = &#39;val&#39;. CALL FUNCTION &#39;POPUP_GET_VALUES_USER_HELP&#39; EXPORTING * F1_FORMNAME = &#39; &#39; * F1_PROGRAMNAME = &#39;</description>
    </item>
    
    <item>
      <title>物料单位转换</title>
      <link>https://coldinfire.github.io/2018/ABAP_CONVERT_MATERIAL_UNIT/</link>
      <pubDate>Thu, 09 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2018/ABAP_CONVERT_MATERIAL_UNIT/</guid>
      <description>MARM物料单位转换 call function &#39;MD_CONVERT_MATERIAL_UNIT&#39; exporting i_matnr = matnr i_in_me = in_me i_out_me = out_me i_menge = in_menge importing e_menge = out_menge exceptions error_in_application = 1 error = 2 others = 3 . if sy-subrc &amp;lt;&amp;gt; 0. MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4. endif. 取字段简短描述 DATA inttab LIKE STANDARD TABLE</description>
    </item>
    
    <item>
      <title>常用Tcode</title>
      <link>https://coldinfire.github.io/2018/ABAP_Tcode/</link>
      <pubDate>Sun, 05 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2018/ABAP_Tcode/</guid>
      <description>TCode SPRO : 显示后勤 ST05 : Trace Sql 路径跟踪 ST22：ABAP Runtime Error SE19 : BADI修改和创建 SE24 : 创建、修改、查询类的开发工具 SE21 : 创建、修改、查询包的开发工具 ST22</description>
    </item>
    
    <item>
      <title>ALV控制单元格不可编辑</title>
      <link>https://coldinfire.github.io/2018/ABAP_ALVEditContro/</link>
      <pubDate>Fri, 03 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2018/ABAP_ALVEditContro/</guid>
      <description>如果设置了可编辑的字段那么 alv 便会添加相应的编辑按钮。如果不需要这些按钮那么可以按上面说过的方法排除他们。 如果已经把整列设为可编辑，而只想让这</description>
    </item>
    
    <item>
      <title> 修改文件所属 Package </title>
      <link>https://coldinfire.github.io/2018/ABAP_Package/</link>
      <pubDate>Wed, 01 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2018/ABAP_Package/</guid>
      <description>​ 创建 ABAP 程序的时候都要选择一个 Package，当后续需要修改程序所属的Package时可以使用以下方法： 通过SE38或则SE80打开对应的程</description>
    </item>
    
    <item>
      <title>Smartforms循环打印，页码统计</title>
      <link>https://coldinfire.github.io/2018/ABAP_Smartform_LoopPrint/</link>
      <pubDate>Tue, 31 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2018/ABAP_Smartform_LoopPrint/</guid>
      <description>Smartforms循环打印数据 ​ 在smartforms的使用中，偶尔会遇到客户要求按某一条件进行数据的分组打印，并进行页码的统计和区分，这</description>
    </item>
    
    <item>
      <title>Smartforms调用模板</title>
      <link>https://coldinfire.github.io/2018/ABAP_SmartfomrsToPDF/</link>
      <pubDate>Sat, 28 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2018/ABAP_SmartfomrsToPDF/</guid>
      <description>程序中使用Smartform模板 &amp;quot;SMARTFORMS变量定义 DATA: lv_form_name TYPE tdsfname VALUE &#39;ZZ_TEST&#39;, &amp;quot;Smartforms Name lv_fm_name type rs38l_fnam, &amp;quot;Function Name ls_control type ssfctrlop, &amp;quot;Control structure ls_option type ssfcompop, &amp;quot;Smart Composer (transfer) options ls_ssfcrescl type ssfcrescl. &amp;quot;Return value at end of form</description>
    </item>
    
    <item>
      <title>Smartforms常用工具</title>
      <link>https://coldinfire.github.io/2018/ABAP_Smartforms_Utils/</link>
      <pubDate>Tue, 24 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2018/ABAP_Smartforms_Utils/</guid>
      <description>Table和template区别： 1、table 行为动态，数据输出时会根据列宽自动换行，可以固定列宽， 但是默认情况下控制不了行高，如果要想 template</description>
    </item>
    
    <item>
      <title>Smartforms</title>
      <link>https://coldinfire.github.io/2018/ABAP_Smartforms/</link>
      <pubDate>Fri, 20 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2018/ABAP_Smartforms/</guid>
      <description>查找Smartforms TCode：NACE可以查找 Table：TNAPR根据smartform名字查找对应的smartform程序 创建 TCode:smartforms S</description>
    </item>
    
    <item>
      <title>ALV添加复选框，并添加全选，不全选功能</title>
      <link>https://coldinfire.github.io/2018/ABAP_ALV_CHECKBOX/</link>
      <pubDate>Mon, 16 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2018/ABAP_ALV_CHECKBOX/</guid>
      <description>定义结构中定义该字段 DATA: BEGIN OF gt_print OCCURS 10, CHECKBOX TYPE flag, ...... DATA: END OF gt_print. FIELDCAT添加并定义CheckBox &amp;quot;$. Region ALV_Data TYPE-POOLS:slis. DATA: alv_fieldcat TYPE STANDARD TABLE OF slis_fieldcat_alv WITH HEADER LINE, alv_layout TYPE slis_layout_alv. alv_fieldcat-fieldname = &#39;CHECKBOX&#39;. alv_fieldcat-scrtext_m = &#39;Choose&#39;. alv_fieldcat-checkbox =</description>
    </item>
    
    <item>
      <title>报表开发&lt;OO ALV工具&gt;</title>
      <link>https://coldinfire.github.io/2018/ABAPTable9/</link>
      <pubDate>Sat, 14 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2018/ABAPTable9/</guid>
      <description>显示后，修改字段目录和布局 ​ 通过方法在第一次显示之后，设置一个新的布局或则字段目录。 方法 字段目录：GET_FRONTEND_FIELDCAT</description>
    </item>
    
    <item>
      <title>SAP锁机制</title>
      <link>https://coldinfire.github.io/2018/ABAP_Lock/</link>
      <pubDate>Thu, 12 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2018/ABAP_Lock/</guid>
      <description>一、SAP 为什么要设置锁： 1，保持数据的一致性 ​ 同时多个用户操作同一数据，防止数据出现不一致性而采用了锁机制。一般 sap 会在操作数据前设置锁，防</description>
    </item>
    
    <item>
      <title>OO语法</title>
      <link>https://coldinfire.github.io/2018/ABAPTable7/</link>
      <pubDate>Tue, 10 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2018/ABAPTable7/</guid>
      <description>类声明和实现 l 类具有属性和方法 l 对象是类的实例 l 对象是通过指针变量来访问的 l 对象有独立的 interface *Class Declarations CLASS application DEFINITION. PUBLIC SECTION. METHODS: show_text. PRIVATE SECTION. DATA text(100) TYPE c VALUE &#39;This is my first ABAP Object.&#39;. ENDCLASS. *Class Implementation</description>
    </item>
    
    <item>
      <title>OO ALV实例程序</title>
      <link>https://coldinfire.github.io/2018/ABAPTable8/</link>
      <pubDate>Sun, 08 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2018/ABAPTable8/</guid>
      <description>OO ALV简单实例：其中屏幕的创建， 和对应PAI,PBO以及Status title等可以自定调整。 REPORT zoo_alv. TYPE-POOLS: slis. *-- Global data Decleration. TYPES:BEGIN OF ty_output, ebeln TYPE ebeln, aedat TYPE erdat, ernam TYPE ernam, ebelp TYPE</description>
    </item>
    
    <item>
      <title>报表开发&lt;OO ALV&gt;</title>
      <link>https://coldinfire.github.io/2018/ABAPTable6/</link>
      <pubDate>Fri, 06 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2018/ABAPTable6/</guid>
      <description>OO ALV ​ ALV GRID CONTROL 使用了控制器技术以实现屏幕显示，和所有的控制器一样，ALV GRID CONTROL 通过系统中的一个全局的类提供了方法，以响应它的动作. ​ 使用了 ABAP 的对</description>
    </item>
    
    <item>
      <title>报表开发&lt;常用工具&gt;</title>
      <link>https://coldinfire.github.io/2018/ABAPTable5/</link>
      <pubDate>Tue, 03 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2018/ABAPTable5/</guid>
      <description>单元格中的数据被修改后，将ALV单元格中的数据立即刷新到ABAP对应的内表中 方法一：通过对REUSE_ALV_GRID_DISPLAY函数参</description>
    </item>
    
    <item>
      <title>报表开发&lt;ALV显示设置&gt;</title>
      <link>https://coldinfire.github.io/2018/ABAPTable4/</link>
      <pubDate>Thu, 28 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2018/ABAPTable4/</guid>
      <description>ALV常使用的FM LVC_FIELDCATALOG_MERGE：根据内表结构返回FIELDCAT字段结构信息. REUSE_ALV_GRID_</description>
    </item>
    
    <item>
      <title>报表开发&lt;内表操作&gt;</title>
      <link>https://coldinfire.github.io/2018/ABAPTable3/</link>
      <pubDate>Sat, 23 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2018/ABAPTable3/</guid>
      <description>内表操作 SQL 语句的执行顺序 书写顺序：SELECT [DISTINCT]&amp;ndash;&amp;gt;FROM&amp;ndash;&amp;gt;WHERE&amp;ndash;&amp;gt;GROUP BY&amp;ndash;&amp;gt;HAVING&amp;ndash;&amp;gt;UNION&amp;ndash;&amp;gt;ORDER BY 其执行顺序为：FROM&amp;ndash;&amp;gt;WHERE&amp;ndash;&amp;gt;GROUP BY&amp;ndash;&amp;gt;HAVING&amp;ndash;&amp;gt;SELECT&amp;ndash;&amp;gt;DISTINCT&amp;ndash;&amp;gt;UNION-&amp;gt;ORDER</description>
    </item>
    
    <item>
      <title>报表开发&lt;屏幕设置&gt;</title>
      <link>https://coldinfire.github.io/2018/ABAPTable2/</link>
      <pubDate>Tue, 19 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2018/ABAPTable2/</guid>
      <description>选择屏幕 引用链接 触发 ​ 选择屏幕触发的是：AT SELECTION-SCREEN ​ 对话屏幕触发的是：PAI ​ 列表屏幕触发的是：AT USER-COMMAND SELECT-SCREEN SELECT-SCREEN语句用于创建屏</description>
    </item>
    
    <item>
      <title> SM30表维护 </title>
      <link>https://coldinfire.github.io/2018/ABAP_SM30/</link>
      <pubDate>Mon, 18 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2018/ABAP_SM30/</guid>
      <description>表维护创建 创建自定义表 需要设置为 Display/Maintenance Allowed.允许修改，才可以在SM30中进行数据维护。否则会产生以下异常： 创建表维护 权限组：控制访问权</description>
    </item>
    
    <item>
      <title>报表开发&lt;概述&gt;</title>
      <link>https://coldinfire.github.io/2018/ABAPTable1/</link>
      <pubDate>Mon, 18 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2018/ABAPTable1/</guid>
      <description>报表格式 程序说明：包括程序名称，实现的业务功能等信息 数据定义 Include内容 定义选择屏幕 执行程序业务代码 创建TCode：SE93 执行程序的</description>
    </item>
    
    <item>
      <title> SAP流水号 </title>
      <link>https://coldinfire.github.io/2018/ABAP_SerialNumber/</link>
      <pubDate>Sun, 17 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2018/ABAP_SerialNumber/</guid>
      <description>TCode SNRO OYSM 读取函数 NUMBER_GET_NEXT 相关表 NRIV TNRO 函数组 SNR0 Online maint. of number ranges &amp;amp; groups SNR1 Interface for number ranges and groups SNR2 Maintenance of number range objects SNR3 Number range checks, assignment &amp;amp; info SNR4 Number ranges utility 使用 如有跳号现象，可以禁用对象的 Buffer 试试 5NZ</description>
    </item>
    
    <item>
      <title>业务流程</title>
      <link>https://coldinfire.github.io/2018/ABAPSummory/</link>
      <pubDate>Sun, 17 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2018/ABAPSummory/</guid>
      <description>PP流程 MM01(Material)-&amp;gt;CS01(BOM)-&amp;gt;CR01(WORKCENTERY)-&amp;gt;CA01(ROUTING)-&amp;gt;MD11(PLANNED ORDER)-&amp;gt; COO1(PRODUCTION ORDERS)也可通过CO41/CO40转换计划单得来. COMAC:对生产订单进行可用性检查 COHVOMPRINT:打印订单 M</description>
    </item>
    
    <item>
      <title> ABAP学习网站记录 </title>
      <link>https://coldinfire.github.io/2018/ABAPWebSite/</link>
      <pubDate>Sat, 16 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2018/ABAPWebSite/</guid>
      <description>http://www.saptechnical.com/index.htm：需要检索关键信息 https://sapcodes.com/：包含</description>
    </item>
    
    <item>
      <title> ABAP截取字符串长度 </title>
      <link>https://coldinfire.github.io/2018/ABAP_StrCNChina/</link>
      <pubDate>Sat, 16 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2018/ABAP_StrCNChina/</guid>
      <description>截取包含中文字符串 strlen()只能计算包含英文字符串的长度，不能计算中文字符串的长度。 可以通过cl_abap_list_utilitie</description>
    </item>
    
    <item>
      <title> ABAP通过字段找表程序 </title>
      <link>https://coldinfire.github.io/2018/ABAP_FieldFindProgram/</link>
      <pubDate>Fri, 15 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2018/ABAP_FieldFindProgram/</guid>
      <description>获取数据保存在哪个表 前台对指定栏位 使用 F1 帮助找表 ST05 跟踪业务操作过程，检索需要的数据表.（此方法找表很高效） 对于文本字段找表，可以找到前台维护</description>
    </item>
    
    <item>
      <title>红绿灯</title>
      <link>https://coldinfire.github.io/2018/ABAP_TrafficLight/</link>
      <pubDate>Thu, 14 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2018/ABAP_TrafficLight/</guid>
      <description>定义 TYPE-POOLS:icon,sym,slis,col. DATA: l_alv_filed TYPE slis_fieldcat_alv, l_alv_filedcat TYPE slis_t_fieldcat_alv. TYPES:BEGIN OF str_alv, id TYPE char25, xxx TYPE xxx, xxx TYPE xxx, xxx TYPE xxx, xxx TYPE string, END OF str_alv. DATA:it_alv TYPE STANDARD TABLE OF str_alv WITH HEADER LINE. CONSTANTS: c_green TYPE icon-id VALUE &#39;@08@&#39;, c_yellow TYPE icon-id VALUE &#39;@09@&#39;, c_red TYPE icon-id VALUE &#39;@0A@&#39;. 赋值 IF it_return-type = &#39;E&#39;. it_alv-id = c_red. CALL FUNCTION &#39;BAPI_TRANSACTION_ROLLBACK&#39;. ELSE. it_alv-id</description>
    </item>
    
    <item>
      <title>小数后面去除后缀0</title>
      <link>https://coldinfire.github.io/2018/ABAP_EndZero/</link>
      <pubDate>Wed, 13 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2018/ABAP_EndZero/</guid>
      <description>小数后面去除后缀0 form DATA_DELETE_ZERO using p_field z_result. DATA:var1 TYPE p DECIMALS 3, var2 TYPE p DECIMALS 2, var3 TYPE p DECIMALS 1, var4 TYPE i. move p_field to var1. move p_field to var2. move p_field to var3. move p_field to var4. IF var2 = var1. IF var3 = var1. IF var4 = var1. z_result = var4. ELSE. z_result = var3. ENDIF. ELSE. z_result</description>
    </item>
    
    <item>
      <title>添加修改人信息</title>
      <link>https://coldinfire.github.io/2018/ABAP_AddUser/</link>
      <pubDate>Mon, 11 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2018/ABAP_AddUser/</guid>
      <description>添加修改人信息 可以根据TCode进行相应的判断： 创建人信息: l_wa_head-ernam = sy-uname. l_wa_head-erdat = sy-datum. l_wa_head-erzet = sy-uzeit. call function &#39;TERMINAL_ID_GET&#39; exporting username = sy-uname importing terminal = l_wa_head-eterminal exceptions multiple_terminal_id = 1 no_terminal_found = 2 others = 3. 修改人信息： l_wa_head-urnam = sy-uname. l_wa_head-urdat</description>
    </item>
    
    <item>
      <title>数据输入输出转换</title>
      <link>https://coldinfire.github.io/2018/ABAP_DataConversion/</link>
      <pubDate>Fri, 08 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2018/ABAP_DataConversion/</guid>
      <description>输入输出转换 ​ 如果某个变量参照的数据所对应的Domain具有转换规则，在(Write,ALV,文本框显示)，最后结果会自动转换。 ​ 通过转换规</description>
    </item>
    
    <item>
      <title>ABAP程序间调用</title>
      <link>https://coldinfire.github.io/2018/ABAP_Basis9/</link>
      <pubDate>Tue, 05 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2018/ABAP_Basis9/</guid>
      <description>同步调用 在一个程序中调用其他ABAP程序。有两种方式 中断执行 调用程序被打断，当被调用程序执行完毕之后，调用程序继续执行。 CALL FUNCTION [function] SUBMIT [program] AND RETURN CALL TRANSACTION [TCode]</description>
    </item>
    
    <item>
      <title>ABAP 性能优化(程序逻辑)</title>
      <link>https://coldinfire.github.io/2018/ABAP_Basis8/</link>
      <pubDate>Sun, 03 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2018/ABAP_Basis8/</guid>
      <description>性能分析工具 ​ SE30(旧)；SAT(新)：运行时间分析工具 ​ ST12: 程序优化 READ TABLE &amp;hellip;WITH [TABLE] KEY&amp;hellip;BINARY SEARCH读取标准内表使用二分查找 在循环（LOOP AT &amp;h</description>
    </item>
    
    <item>
      <title>ABAP 性能优化(数据操作)</title>
      <link>https://coldinfire.github.io/2018/ABAP_Basis7/</link>
      <pubDate>Fri, 01 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2018/ABAP_Basis7/</guid>
      <description>数据库 不要使用 SELECT * &amp;hellip;，选择需要的字段, SELECT * 既浪费CPU，还需占用大量的ABAP内存 不要使用SELECT DISTINCT .，会绕过缓存，可使用</description>
    </item>
    
    <item>
      <title>ABAP Native SQL</title>
      <link>https://coldinfire.github.io/2018/ABAP_Basis6/</link>
      <pubDate>Sat, 26 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2018/ABAP_Basis6/</guid>
      <description>Native SQL ​ EXEC SQL 和 ADBC 是所谓的 Native SQL，这种方式直接进入指定数据库，不涉及到 DBI，这样就没有 Table buffer。相对 EXEC SQL 来说，更推荐 ADBC 的方式执行 native sq</description>
    </item>
    
    <item>
      <title>ABAP Open SQL</title>
      <link>https://coldinfire.github.io/2018/ABAP_Basis5/</link>
      <pubDate>Thu, 24 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2018/ABAP_Basis5/</guid>
      <description>Open SQL ABAP可以通过两种方式与数据库交互 Native SQL:数据库自身的SQL，可以直接访问数据库，不够安全。 Open SQL:集成到ABAP中的标准SQL子</description>
    </item>
    
    <item>
      <title>ABAP Form和Function</title>
      <link>https://coldinfire.github.io/2018/ABAP_Basis4/</link>
      <pubDate>Sun, 20 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2018/ABAP_Basis4/</guid>
      <description>全局变量，局部变量 ​ 报表程序中：选择屏幕事件块(AT SELECTION-SCREEN),逻辑数据库事件块，及methods，subrouti</description>
    </item>
    
    <item>
      <title>ABAP 内表</title>
      <link>https://coldinfire.github.io/2018/ABAP_Basis3/</link>
      <pubDate>Wed, 16 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2018/ABAP_Basis3/</guid>
      <description>内表定义和使用 内表定义 工作区域:工作区域可以存放多个变量数据,相当于一维数组。 通过Type声明自定义工作区：需要使用Data进行赋值 TYPES: BEGIN OF str_name.</description>
    </item>
    
    <item>
      <title>ABAP 数据表</title>
      <link>https://coldinfire.github.io/2018/ABAP_Basis2/</link>
      <pubDate>Mon, 14 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2018/ABAP_Basis2/</guid>
      <description>Table:透明表(Transparent table)、簇表 (Cluster table)、 池表(Pool table) ​ 透明表：和数据库具有相同结构的表存储结构。数据</description>
    </item>
    
    <item>
      <title>ABAP 数据类型</title>
      <link>https://coldinfire.github.io/2018/ABAP_Basis1/</link>
      <pubDate>Sat, 12 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://coldinfire.github.io/2018/ABAP_Basis1/</guid>
      <description>ABAP基本数据类型 基本数据类型 C : Character text D : Date(YYYYMMDD) P : Packed(包类型:1-16) N : Numeric text(不能进行计算) T : Time(HHMMSS) X : 十六进制 I : Interger F :</description>
    </item>
    
  </channel>
</rss>